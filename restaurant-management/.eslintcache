[{"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\DefaultLayout.js":"4","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\Header.js":"5","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\routes.js":"6","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\Footer.js":"7","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\ProductTypeList.js":"8","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\Welcome.js":"9","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\PositionList.js":"10","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\EmployeeList.js":"11","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\products\\ProductList.js":"12","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\controls\\Input.js":"13","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\positionService.js":"14","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\productTypeService.js":"15","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\employeeService.js":"16","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\productService.js":"17","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\api.js":"18","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\store\\index.js":"19","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\store\\reducers\\auth.js":"20","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\store\\actions.js":"21","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\order.jsx":"22","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\TableService.js":"23","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\BillDetailService.js":"24","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\BillService.js":"25","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\promotionTypeService.js":"26","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\Bill.jsx":"27","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\controls\\select.js":"28","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\BillDetail.jsx":"29"},{"size":1292,"mtime":1609147322600,"results":"30","hashOfConfig":"31"},{"size":382,"mtime":1609145488368,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1609145488368,"results":"33","hashOfConfig":"31"},{"size":826,"mtime":1609145488368,"results":"34","hashOfConfig":"31"},{"size":2666,"mtime":1609399950628,"results":"35","hashOfConfig":"31"},{"size":1147,"mtime":1609400803597,"results":"36","hashOfConfig":"31"},{"size":539,"mtime":1609145488368,"results":"37","hashOfConfig":"31"},{"size":11614,"mtime":1609405436832,"results":"38","hashOfConfig":"31"},{"size":598,"mtime":1609145488368,"results":"39","hashOfConfig":"31"},{"size":12502,"mtime":1609145488368,"results":"40","hashOfConfig":"31"},{"size":15801,"mtime":1609147523957,"results":"41","hashOfConfig":"31"},{"size":17467,"mtime":1609145488368,"results":"42","hashOfConfig":"31"},{"size":2175,"mtime":1609147471834,"results":"43","hashOfConfig":"31"},{"size":638,"mtime":1609145488368,"results":"44","hashOfConfig":"31"},{"size":623,"mtime":1609290396169,"results":"45","hashOfConfig":"31"},{"size":638,"mtime":1609145488368,"results":"46","hashOfConfig":"31"},{"size":1922,"mtime":1609407500394,"results":"47","hashOfConfig":"31"},{"size":605,"mtime":1609399996672,"results":"48","hashOfConfig":"31"},{"size":235,"mtime":1609147107469,"results":"49","hashOfConfig":"31"},{"size":1062,"mtime":1609147107473,"results":"50","hashOfConfig":"31"},{"size":118,"mtime":1609147107462,"results":"51","hashOfConfig":"31"},{"size":16876,"mtime":1609408027871,"results":"52","hashOfConfig":"31"},{"size":697,"mtime":1609339400404,"results":"53","hashOfConfig":"31"},{"size":859,"mtime":1609319947911,"results":"54","hashOfConfig":"31"},{"size":1816,"mtime":1609378767323,"results":"55","hashOfConfig":"31"},{"size":594,"mtime":1609374860649,"results":"56","hashOfConfig":"31"},{"size":8897,"mtime":1609405394165,"results":"57","hashOfConfig":"31"},{"size":959,"mtime":1609400087858,"results":"58","hashOfConfig":"31"},{"size":2614,"mtime":1609401136174,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"13tivx7",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"63"},"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\index.js",["127","128"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// REDUX\r\nimport { Provider } from 'react-redux';\r\n//import store from \"./store\";\r\nimport store from './store';\r\n\r\ntoast.configure({\r\n\tautoClose: 3000,\r\n\tdraggable: false,\r\n\tposition: 'top-right',\r\n\thideProgressBar: false,\r\n\tnewestOnTop: true,\r\n\tcloseOnClick: true,\r\n\trtl: false,\r\n\tpauseOnFocusLoss: true,\r\n\tpauseOnHover: true,\r\n});\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["129","130"],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\DefaultLayout.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\Header.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\routes.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\Footer.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\ProductTypeList.js",["131","132","133","134"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport Input from '../controls/Input';\r\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\r\nimport productTypeService from '../services/productTypeService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ProductTypeList = (props) => {\r\n\tconst [productTypes, setProductTypes] = useState([]);\r\n\tconst [typesPerPage, setTypesPerPage] = useState(10);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [totalPages, setTotalPages] = useState(0);\r\n\tconst [totalElements, setTotalElements] = useState(0);\r\n\tconst [sortDir, setSortDir] = useState('asc');\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\t// Validation\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tname: Yup.string().required('Required'),\r\n\t\t\t// .min(5, \"Must be 5 characters or more.\"),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\tconsole.log(values);\r\n\t\t\thandleFormSubmit(values);\r\n\t\t},\r\n\t});\r\n\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\r\n\t// get product type ID\r\n\tconst [detail, setDetail] = useState(false);\r\n\tconst handleDetailClose = () => setDetail(false);\r\n\tconst getProductType = (e, dataId) => {\r\n\t\tif (e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\tsetProductTypeId(dataId);\r\n\t\tif (dataId > 0) {\r\n\t\t\t// edit\r\n\t\t\tproductTypeService.get(dataId).then((res) => {\r\n\t\t\t\tformik.setValues(res);\r\n\t\t\t\tsetDetail(true);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst [id, setId] = useState(1);\r\n\tconst [productTypeId, setProductTypeId] = useState(0);\r\n\r\n\tconst handleModalClose = () => setModalShow(false);\r\n\tconst handleModalShow = (e, dataId) => {\r\n\t\tif (e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\tsetProductTypeId(dataId);\r\n\t\tif (dataId > 0) {\r\n\t\t\t// edit\r\n\t\t\tproductTypeService.get(dataId).then((res) => {\r\n\t\t\t\tformik.setValues(res);\r\n\t\t\t\tsetModalShow(true);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// add\r\n\t\t\tformik.resetForm();\r\n\t\t\tsetModalShow(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst sortData = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsortDir === 'asc' ? setSortDir('desc') : setSortDir('asc');\r\n\t\t\tloadData(currentPage);\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tconst loadData = (currentPage) => {\r\n\t\t// productTypeService.getAll().then((res) => {\r\n\t\t//   setProductTypes(res);\r\n\t\t// });\r\n\t\tcurrentPage -= 1;\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'http://localhost:8080/productTypes?pageNumber=' +\r\n\t\t\t\t\tcurrentPage +\r\n\t\t\t\t\t'&pageSize=' +\r\n\t\t\t\t\ttypesPerPage +\r\n\t\t\t\t\t'&sortBy=name&sortDir=' +\r\n\t\t\t\t\tsortDir\r\n\t\t\t)\r\n\t\t\t.then((res) => res.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetProductTypes(data.content);\r\n\t\t\t\tsetTotalPages(data.totalPages);\r\n\t\t\t\tsetTotalElements(data.totalElements);\r\n\t\t\t\tsetCurrentPage(data.number + 1);\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// if (id === \"\" || id === null) return;\r\n\t\tloadData(currentPage);\r\n\t}, []);\r\n\r\n\tconst handleFormSubmit = (data) => {\r\n\t\tif (productTypeId === null) {\r\n\t\t\t// add\r\n\t\t\tproductTypeService.add(data).then((res) => {\r\n\t\t\t\ttoast.success('Add new data successfully');\r\n\t\t\t\tloadData(currentPage);\r\n\t\t\t\thandleModalClose();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// update\r\n\t\t\tproductTypeService.update(productTypeId, data).then((res) => {\r\n\t\t\t\ttoast.success('Update data successfully');\r\n\t\t\t\tloadData(currentPage);\r\n\t\t\t\thandleModalClose();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteRow = (e, dataId) => {\r\n\t\te.preventDefault();\r\n\t\tproductTypeService.remove(dataId).then((res) => {\r\n\t\t\ttoast.warning('A data has been deleted!');\r\n\t\t\tloadData(currentPage);\r\n\t\t});\r\n\t};\r\n\r\n\tconst changePage = (event) => {\r\n\t\tlet targetPage = parseInt(event.target.value);\r\n\t\tif (search) {\r\n\t\t\tsearchData(targetPage);\r\n\t\t} else {\r\n\t\t\tloadData(targetPage);\r\n\t\t}\r\n\r\n\t\tevent.target.name = targetPage;\r\n\t};\r\n\r\n\tconst firstPage = () => {\r\n\t\tlet firstPage = 1;\r\n\t\tif (currentPage > firstPage) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(firstPage);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(firstPage);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst prevPage = () => {\r\n\t\tlet prevPage = 1;\r\n\t\tif (currentPage > prevPage) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(currentPage - prevPage);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(currentPage - prevPage);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst lastPage = () => {\r\n\t\tlet condition = Math.ceil(totalElements / typesPerPage);\r\n\t\tif (currentPage < condition) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(condition);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(condition);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst nextPage = () => {\r\n\t\tif (currentPage < Math.ceil(totalElements / typesPerPage)) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(currentPage + 1);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(currentPage + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchChange = (event) => {\r\n\t\tconst searchText = event.target.value;\r\n\t\tsetSearch(searchText);\r\n\t};\r\n\r\n\tconst cancelSearch = () => {\r\n\t\tsetSearch('');\r\n\t\tloadData(currentPage);\r\n\t};\r\n\r\n\tconst searchData = (currentPage) => {\r\n\t\tcurrentPage -= 1;\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'http://localhost:8080/productTypes/search/' + search + '?page=' + currentPage + '&size=' + typesPerPage\r\n\t\t\t)\r\n\t\t\t.then((response) => response.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetProductTypes(data.content);\r\n\t\t\t\tsetTotalPages(data.totalPages);\r\n\t\t\t\tsetTotalElements(data.totalElements);\r\n\t\t\t\tsetCurrentPage(data.number + 1);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"container pt-4\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n\t\t\t\t\t\t\t<InputGroup size=\"sm\">\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\t\t\t\t\tclassName={'border-primary bg-light text-dark'}\r\n\t\t\t\t\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"outline-success\" type=\"button\" onClick={searchData}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-search\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"outline-danger\" type=\"button\" onClick={cancelSearch}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container pt-4\">\r\n\t\t\t\t\t<div className=\"card border-primary bt-primary-5\">\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Product Type List</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\tdata-toggle=\"modal\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleModalShow(null, null)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle mr-1\"></i>\r\n\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<table className=\"table table-hover table-striped table-bordered text-center\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr className=\"table-primary\">\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">No.</th>\r\n\t\t\t\t\t\t\t\t\t\t<th onClick={sortData} scope=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\tName{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={sortDir === 'asc' ? 'arrow arrow-up' : 'arrow arrow-down'}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t{/* <th scope=\"col\">Description</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{productTypes.map((productType, idx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={productType.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{idx + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{productType.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{productType.description}</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mr-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => getProductType(e, productType.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-eye text-primary\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mr-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleModalShow(e, productType.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit text-success\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/#\" onClick={(e) => deleteRow(e, productType.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash-alt text-danger\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{productTypes.length > 0 ? (\r\n\t\t\t\t\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t\t\t\t\t<div style={{ float: 'left' }}>\r\n\t\t\t\t\t\t\t\t\tShowing Page {currentPage} of {totalPages}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ float: 'right' }}>\r\n\t\t\t\t\t\t\t\t\t<InputGroup size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={firstPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-fast-backward\"></i> First\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={prevPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-step-backward\"></i> Prev\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={'page-num bg-light border-primary'}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"currentPage\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={currentPage}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={changePage}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === totalPages ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={nextPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-step-forward\"></i> Next\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === totalPages ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={lastPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-fast-forward\"></i> Last\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Modal */}\r\n\t\t\t<Modal show={modalShow} onHide={handleModalClose} backdrop=\"static\" keyboard={false}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Product Types</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"txtName\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\tmaxLength=\"100\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('name')}\r\n\t\t\t\t\t\t\terr={formik.touched.name && formik.errors.name}\r\n\t\t\t\t\t\t\terrMessage={formik.errors.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"form-group row\"></div>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"txtDesc\"\r\n\t\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\tmaxLength=\"200\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('description')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleModalClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" disabled={!(formik.isValid && formik.dirty)}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</form>\r\n\t\t\t</Modal>\r\n\t\t\t{/* End modal */}\r\n\r\n\t\t\t<Modal show={detail} onHide={handleDetailClose} backdrop=\"static\" keyboard={false}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Product Type Detail</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Input label=\"Name\" frmField={formik.getFieldProps('name')} readonly />\r\n\t\t\t\t\t<Input label=\"Description\" frmField={formik.getFieldProps('description')} readonly rows=\"10\" />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProductTypeList;\r\n","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\containers\\Welcome.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\PositionList.js",["135","136","137","138","139"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport { event } from \"jquery\";\r\nimport Input from \"../controls/Input\";\r\nimport positionService from \"../services/positionService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst PositionList = (props) => {\r\n  const [positions, setPositions] = useState([]);\r\n  const [typesPerPage, setTypesPerPage] = useState(6);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalElements, setTotalElements] = useState(0);\r\n  const [sortDir, setSortDir] = useState(\"asc\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //validation\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Name is not null !!!\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [id, setId] = useState(1);\r\n  const [positionId, setPositionId] = useState(0);\r\n  const handleModalClose = () => setModalShow(false);\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    setPositionId(dataId);\r\n    if (dataId > 0) {\r\n      //edit\r\n      positionService.get(dataId).then((res) => {\r\n        formik.setValues(res);\r\n        setModalShow(true);\r\n      });\r\n    } else {\r\n      // add\r\n      formik.resetForm();\r\n      setModalShow(true);\r\n    }\r\n  };\r\n\r\n  const sortData = () => {\r\n    setTimeout(() => {\r\n      sortDir === \"asc\" ? setSortDir(\"desc\") : setSortDir(\"asc\");\r\n      loadData(currentPage);\r\n    }, 500);\r\n  };\r\n\r\n  const loadData = (currentPage) => {\r\n    currentPage -= 1;\r\n    axios\r\n      .get(\r\n        \"http://localhost:8080/positions?pageNumber=\" +\r\n          currentPage +\r\n          \"&pageSize=\" +\r\n          typesPerPage +\r\n          \"&sortBy=name&sortDir=\" +\r\n          sortDir\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setPositions(data.content);\r\n        setTotalPages(data.totalPages);\r\n        setTotalElements(data.totalElements);\r\n        setCurrentPage(data.number + 1);\r\n      });\r\n    // positionService.getAll().then(res => {\r\n    //   console.log(res);\r\n    //   setPositions(res)\r\n    // })\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(currentPage);\r\n  }, []);\r\n\r\n  const handleFormSubmit = (data) => {\r\n    if (positionId === null) {\r\n      // add\r\n      positionService.add(data).then((res) => {\r\n        toast.success('Add new data successfully!');\r\n        loadData(currentPage);\r\n        handleModalClose();\r\n      });\r\n    } else {\r\n      //update\r\n      positionService.update(positionId, data).then((res) => {\r\n        toast.success('Update existing data successfully!');\r\n        loadData(currentPage);\r\n        handleModalClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteRow = (e, dataId) => {\r\n    e.preventDefault();\r\n    positionService.remove(dataId).then((res) => {\r\n      toast.error('A data has been deleted');\r\n      loadData(currentPage);\r\n    });\r\n  };\r\n\r\n  const changePage = (event) => {\r\n    let targetPage = parseInt(event.target.value);\r\n    if (search) {\r\n      searchData(targetPage);\r\n    } else {\r\n      loadData(targetPage);\r\n    }\r\n\r\n    event.target.name = targetPage;\r\n  };\r\n\r\n  const firstPage = () => {\r\n    let firstPage = 1;\r\n    if (currentPage > firstPage) {\r\n      if (search) {\r\n        searchData(firstPage);\r\n      } else {\r\n        loadData(firstPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    let prevPage = 1;\r\n    if (currentPage > prevPage) {\r\n      if (search) {\r\n        searchData(currentPage - prevPage);\r\n      } else {\r\n        loadData(currentPage - prevPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const lastPage = () => {\r\n    let condition = Math.ceil(totalElements / typesPerPage);\r\n    if (currentPage < condition) {\r\n      if (search) {\r\n        searchData(condition);\r\n      } else {\r\n        loadData(condition);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < Math.ceil(totalElements / typesPerPage)) {\r\n      if (search) {\r\n        searchData(currentPage + 1);\r\n      } else {\r\n        loadData(currentPage + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchChange = (event) => {\r\n    const searchText = event.target.value;\r\n    setSearch(searchText);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    setSearch(\"\");\r\n    loadData(currentPage);\r\n  };\r\n\r\n  const searchData = (currentPage) => {\r\n    currentPage -= 1;\r\n    axios\r\n      .get(\r\n        \"http://localhost:8080/positions/search/\" +\r\n          search +\r\n          \"?page=\" +\r\n          currentPage +\r\n          \"&size=\" +\r\n          typesPerPage\r\n      )\r\n      .then((Response) => Response.data)\r\n      .then((data) => {\r\n        setPositions(data.content);\r\n        setTotalPages(data.totalPages);\r\n        setTotalElements(data.totalElements);\r\n        setCurrentPage(data.number + 1);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"container pt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n              <InputGroup size=\"sm\">\r\n                <FormControl\r\n                  placeholder=\"Search\"\r\n                  name=\"search\"\r\n                  className={\"border-primary bg-light text-dark\"}\r\n                  onChange={searchChange}\r\n                  value={search}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-success\"\r\n                    type=\"button\"\r\n                    onClick={searchData}\r\n                  >\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-danger\"\r\n                    type=\"button\"\r\n                    onClick={cancelSearch}\r\n                  >\r\n                    <i className=\"fas fa-times\"></i>\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container pt-4\">\r\n          <div className=\"card border-primary bt-primary-5\">\r\n            <div className=\"card-header\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h2 className=\"card-title\">Position List</h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    onClick={() => handleModalShow(null, null)}\r\n                  >\r\n                    <i className=\"fas fa-plus-circle mr-1\"></i>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-hover table-striped table-bordered text-center\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th scope=\"col\">No.</th>\r\n                    <th onClick={sortData} scope=\"col\">\r\n                      Name{\" \"}\r\n                      <div\r\n                        className={\r\n                          sortDir === \"asc\"\r\n                            ? \"arrow arrow-up\"\r\n                            : \"arrow arrow-down\"\r\n                        }\r\n                      ></div>\r\n                    </th>\r\n                    <th scope=\"col\"></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {positions.map((position, idx) => {\r\n                    return (\r\n                      <tr key={position.id}>\r\n                        <th scope=\"row\">{idx + 1}</th>\r\n                        <td>{position.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => handleModalShow(e, position.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-success\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => deleteRow(e, position.id)}\r\n                          >\r\n                            <i className=\"fas fa-trash-alt text-danger\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {positions.length > 0 ? (\r\n              <div className=\"card-footer\">\r\n                <div style={{ float: \"left\" }}>\r\n                  Showing Page {currentPage} of {totalPages}\r\n                </div>\r\n                <div style={{ float: \"right\" }}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={firstPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-backward\"></i> First\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={prevPage}\r\n                      >\r\n                        <i className=\"fas fa-step-backward\"></i> Prev\r\n                      </Button>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      className={\"page-num bg-light border-primary\"}\r\n                      name=\"currentPage\"\r\n                      value={currentPage}\r\n                      onChange={changePage}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={nextPage}\r\n                      >\r\n                        <i className=\"fas fa-step-forward\"></i> Next\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={lastPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-forward\"></i> Last\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Positions</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtName\"\r\n              type=\"text\"\r\n              label=\"Name :\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"name\")}\r\n              err={formik.touched.name && formik.errors.name}\r\n              errMessage={formik.errors.name}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(formik.isValid && formik.dirty)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PositionList;\r\n","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\EmployeeList.js",["140","141","142","143","144","145","146","147","148","149"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport { event } from 'jquery';\r\nimport Input from '../controls/Input';\r\nimport employeeService from '../services/employeeService';\r\nimport positionService from '../services/positionService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EmployeeList = (props) => {\r\n\tconst [employees, setEmployees] = useState([]);\r\n\tconst [employeesPerPage, setEmployeesPerPage] = useState(3);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [totalPages, setTotalPages] = useState(0);\r\n\tconst [totalElements, setTotalElements] = useState(0);\r\n\tconst [sortDir, setSortDir] = useState('asc');\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [positions, setPositions] = useState([]);\r\n\tconst [position, setPosition] = useState({});\r\n\tconst [sites, setSites] = useState([]);\r\n\tconst [site, setSite] = useState({});\r\n\tconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\n\t//validation\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tlastName: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tphoneNumber: '',\r\n\t\t\taddress: '',\r\n\t\t\tidentityCardNumber: '',\r\n\t\t\tposId: '',\r\n\t\t\tsiteId: '',\r\n\t\t\t// position: \"\",\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tlastName: Yup.string().required('Last name is not null !!!'),\r\n\t\t\tfirstName: Yup.string().required('First name is not null !!!'),\r\n\t\t\tphoneNumber: Yup.string()\r\n\t\t\t\t.required('Phone number is not null !!!')\r\n\t\t\t\t.matches(phoneRegExp, 'Phone number is not valid'),\r\n\t\t\tidentityCardNumber: Yup.number()\r\n\t\t\t\t.typeError('The input values is number')\r\n\t\t\t\t.max(9999999999999, 'Do not exceed 13 numbers')\r\n\t\t\t\t.min(1000000000, 'Phai lon hon 10 so')\r\n\t\t\t\t.required('ID card is not null !!!'),\r\n\t\t\taddress: Yup.string().required('Adress is not null !!!'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\tconsole.log(values);\r\n\t\t\thandleFormSubmit(values);\r\n\t\t},\r\n\t});\r\n\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\tconst [id, setId] = useState(1);\r\n\tconst [employeeId, setEmployeeId] = useState(0);\r\n\tconst handleModalClose = () => setModalShow(false);\r\n\tconst handleModalShow = (e, dataId) => {\r\n\t\tif (e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\tsetEmployeeId(dataId);\r\n\t\tif (dataId > 0) {\r\n\t\t\t//edit\r\n\t\t\temployeeService.get(dataId).then((res) => {\r\n\t\t\t\tformik.setValues({\r\n\t\t\t\t\tlastName: res.lastName,\r\n\t\t\t\t\tfirstName: res.firstName,\r\n\t\t\t\t\tphoneNumber: res.phoneNumber,\r\n\t\t\t\t\taddress: res.address,\r\n\t\t\t\t\tidentityCardNumber: res.identityCardNumber,\r\n\t\t\t\t\tposId: res.position.id,\r\n\t\t\t\t\tsiteId: res.site.id,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tsetModalShow(true);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// add\r\n\t\t\tformik.resetForm();\r\n\t\t\tsetModalShow(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst sortData = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsortDir === 'asc' ? setSortDir('desc') : setSortDir('asc');\r\n\t\t\tloadData(currentPage);\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPositions();\r\n\t\tgetSites();\r\n\t\tloadData(currentPage);\r\n\t}, []);\r\n\r\n\tconst loadData = (currentPage) => {\r\n\t\t// pagination\r\n\t\tcurrentPage -= 1;\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'http://localhost:8080/employees?pageNumber=' +\r\n\t\t\t\t\tcurrentPage +\r\n\t\t\t\t\t'&pageSize=' +\r\n\t\t\t\t\temployeesPerPage +\r\n\t\t\t\t\t'&sortBy=firstName&sortDir=' +\r\n\t\t\t\t\tsortDir\r\n\t\t\t)\r\n\t\t\t.then((res) => res.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetEmployees(data.content);\r\n\t\t\t\tsetTotalPages(data.totalPages);\r\n\t\t\t\tsetTotalElements(data.totalElements);\r\n\t\t\t\tsetCurrentPage(data.number + 1);\r\n\t\t\t});\r\n\t\t// employeeService.getAll().then((res) => {\r\n\t\t//   // console.log(res);\r\n\t\t//   setEmployees(res);\r\n\t\t// });\r\n\t};\r\n\r\n\t// lay du lieu tat ca cac hang trong bang site\r\n\tconst getSites = () => {\r\n\t\taxios\r\n\t\t\t.get('http://localhost:8080/sites/getAllSites')\r\n\t\t\t.then((res) => res.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\t// console.log(data);\r\n\t\t\t\tsetSites(data);\r\n\t\t\t});\r\n\t};\r\n\r\n\t// lay du lieu tat ca cac hang trong bang position\r\n\tconst getPositions = () => {\r\n\t\tpositionService.getAll().then((res) => {\r\n\t\t\t// console.log(res);\r\n\t\t\tsetPositions(res);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPositions();\r\n\t\tgetSites();\r\n\t\tloadData(currentPage);\r\n\t}, []);\r\n\r\n\tconst handleFormSubmit = (data) => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('lastName', data.lastName);\r\n\t\tformData.append('firstName', data.firstName);\r\n\t\tformData.append('phoneNumber', data.phoneNumber);\r\n\t\tformData.append('address', data.address);\r\n\t\tformData.append('identityCardNumber', data.identityCardNumber);\r\n\t\tformData.append('posId', data.posId);\r\n\t\tformData.append('siteId', data.siteId);\r\n\r\n\t\tif (employeeId === null) {\r\n\t\t\tconsole.log(data);\r\n\t\t\t// add\r\n\t\t\tfor (let value of formData.values()) {\r\n\t\t\t\tconsole.log(value);\r\n\t\t\t}\r\n\t\t\temployeeService.add(formData).then((res) => {\r\n\t\t\t\ttoast.success('Add new data successfully!');\r\n\t\t\t\tloadData(currentPage);\r\n\t\t\t\thandleModalClose();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t//update\r\n\t\t\temployeeService.update(employeeId, formData).then((res) => {\r\n\t\t\t\ttoast.success('Update existing data successfully!');\r\n\t\t\t\tloadData(currentPage);\r\n\t\t\t\thandleModalClose();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteRow = (e, dataId) => {\r\n\t\te.preventDefault();\r\n\t\temployeeService.remove(dataId).then((res) => {\r\n\t\t\ttoast.error('A data has been deleted!');\r\n\t\t\tloadData(currentPage);\r\n\t\t});\r\n\t};\r\n\r\n\tconst changePage = (event) => {\r\n\t\tlet targetPage = parseInt(event.target.value);\r\n\t\tif (search) {\r\n\t\t\tsearchData(targetPage);\r\n\t\t} else {\r\n\t\t\tloadData(targetPage);\r\n\t\t}\r\n\r\n\t\tevent.target.name = targetPage;\r\n\t};\r\n\r\n\tconst firstPage = () => {\r\n\t\tlet firstPage = 1;\r\n\t\tif (currentPage > firstPage) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(firstPage);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(firstPage);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst prevPage = () => {\r\n\t\tlet prevPage = 1;\r\n\t\tif (currentPage > prevPage) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(currentPage - prevPage);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(currentPage - prevPage);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst lastPage = () => {\r\n\t\tlet condition = Math.ceil(totalElements / employeesPerPage);\r\n\t\tif (currentPage < condition) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(condition);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(condition);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst nextPage = () => {\r\n\t\tif (currentPage < Math.ceil(totalElements / employeesPerPage)) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(currentPage + 1);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(currentPage + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchChange = (event) => {\r\n\t\tconst searchText = event.target.value;\r\n\t\tsetSearch(searchText);\r\n\t};\r\n\r\n\tconst cancelSearch = () => {\r\n\t\tsetSearch('');\r\n\t\tloadData(currentPage);\r\n\t};\r\n\r\n\tconst searchData = (currentPage) => {\r\n\t\tcurrentPage -= 1;\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'http://localhost:8080/employees/search/' +\r\n\t\t\t\t\tsearch +\r\n\t\t\t\t\t'?page=' +\r\n\t\t\t\t\tcurrentPage +\r\n\t\t\t\t\t'&size=' +\r\n\t\t\t\t\temployeesPerPage\r\n\t\t\t)\r\n\t\t\t.then((Response) => Response.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetEmployees(data.content);\r\n\t\t\t\tsetTotalPages(data.totalPages);\r\n\t\t\t\tsetTotalElements(data.totalElements);\r\n\t\t\t\tsetCurrentPage(data.number + 1);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"container pt-4\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n\t\t\t\t\t\t\t<InputGroup size=\"sm\">\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\t\t\t\t\tclassName={'border-primary bg-light text-dark'}\r\n\t\t\t\t\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"outline-success\" type=\"button\" onClick={searchData}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-search\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"outline-danger\" type=\"button\" onClick={cancelSearch}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container pt-4\">\r\n\t\t\t\t\t<div className=\"card border-primary bt-primary-5\">\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Employee List</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\tdata-toggle=\"modal\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleModalShow(null, null)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle mr-1\"></i>\r\n\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<table className=\"table table-hover table-sm table-striped table-bordered text-center\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr className=\"table-primary\">\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">No.</th>\r\n\t\t\t\t\t\t\t\t\t\t{/* <th>Last Name</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th onClick={sortData} scope=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\tLast Name{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={sortDir === 'asc' ? 'arrow arrow-up' : 'arrow arrow-down'}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* <th>First Name</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th onClick={sortData} scope=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\tFirst Name{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={sortDir === 'asc' ? 'arrow arrow-up' : 'arrow arrow-down'}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Phone Number</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Adress</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* <th>Identity Card Number</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th onClick={sortData} scope=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\tIdentity CardNumber{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={sortDir === 'asc' ? 'arrow arrow-up' : 'arrow arrow-down'}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Position</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Working Site</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{employees.map((employee, idx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={employee.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{idx + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.lastName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.firstName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.phoneNumber}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.address}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.identityCardNumber}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.position.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{employee.site.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mr-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleModalShow(e, employee.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit text-success\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/#\" onClick={(e) => deleteRow(e, employee.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash-alt text-danger\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{employees.length > 0 ? (\r\n\t\t\t\t\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t\t\t\t\t<div style={{ float: 'left' }}>\r\n\t\t\t\t\t\t\t\t\tShowing Page {currentPage} of {totalPages}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ float: 'right' }}>\r\n\t\t\t\t\t\t\t\t\t<InputGroup size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={firstPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-fast-backward\"></i> First\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={prevPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-step-backward\"></i> Prev\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={'page-num bg-light border-primary'}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"currentPage\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={currentPage}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={changePage}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === totalPages ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={nextPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-step-forward\"></i> Next\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === totalPages ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={lastPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-fast-forward\"></i> Last\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Modal */}\r\n\t\t\t<Modal show={modalShow} onHide={handleModalClose} backdrop=\"static\" keyboard={false}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Employees</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<form onSubmit={formik.handleSubmit} className=\"mb-3\">\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<div className=\"row mb-3\">\r\n\t\t\t\t\t\t\t<div className=\"col-4\">\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\tname=\"posId\"\r\n\t\t\t\t\t\t\t\t\tid=\"posId\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Position:\"\r\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('posId')}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"\" label=\"--- Select position ---\"></option>\r\n\t\t\t\t\t\t\t\t\t{positions.map((position) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={position.id} value={position.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{position.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"col-4 offset-4\">\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\tname=\"siteId\"\r\n\t\t\t\t\t\t\t\t\tid=\"siteId\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Working Site:\"\r\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('siteId')}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"\" label=\"--- Select site ---\"></option>\r\n\t\t\t\t\t\t\t\t\t{sites.map((site) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={site.id} value={site.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{site.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tclassName=\"mr-2 font-weight-bold\"\r\n\t\t\t\t\t\t\tid=\"txtLastName\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Last Name :\"\r\n\t\t\t\t\t\t\tmaxLength=\"50\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('lastName')}\r\n\t\t\t\t\t\t\terr={formik.touched.lastName && formik.errors.lastName}\r\n\t\t\t\t\t\t\terrMessage={formik.errors.lastName}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"txtFirstName\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"First Name :\"\r\n\t\t\t\t\t\t\tmaxLength=\"50\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('firstName')}\r\n\t\t\t\t\t\t\terr={formik.touched.firstName && formik.errors.firstName}\r\n\t\t\t\t\t\t\terrMessage={formik.errors.firstName}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"txtphoneNumber\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Phone Number :\"\r\n\t\t\t\t\t\t\tmaxLength=\"50\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('phoneNumber')}\r\n\t\t\t\t\t\t\terr={formik.touched.phoneNumber && formik.errors.phoneNumber}\r\n\t\t\t\t\t\t\terrMessage={formik.errors.phoneNumber}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"txtaddress\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Address :\"\r\n\t\t\t\t\t\t\tmaxLength=\"200\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('address')}\r\n\t\t\t\t\t\t\terr={formik.touched.address && formik.errors.address}\r\n\t\t\t\t\t\t\terrMessage={formik.errors.address}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"txtidentityCardNumber\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"CMND:\"\r\n\t\t\t\t\t\t\tfrmField={formik.getFieldProps('identityCardNumber')}\r\n\t\t\t\t\t\t\terr={formik.touched.identityCardNumber && formik.errors.identityCardNumber}\r\n\t\t\t\t\t\t\terrMessage={formik.errors.identityCardNumber}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleModalClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" disabled={!formik.isValid && formik.dirty}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</form>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default EmployeeList;\r\n","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\products\\ProductList.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Input from \"../../controls/Input\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\nimport productService from \"../../services/productService\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport productTypeService from \"../../services/productTypeService\";\r\n\r\nconst ProductList = (props) => {\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalElements, setTotalElements] = useState(0);\r\n  const [sortDir, setSortDir] = useState(\"asc\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // radio button\r\n  // product status\r\n  const handleRadioChange = (value) => {\r\n    formik.setFieldValue(\"status\", value);\r\n  };\r\n\r\n  // get product ID\r\n  const [detail, setDetail] = useState(false);\r\n  const handleDetailClose = () => setDetail(false);\r\n  const [productId, setProductId] = useState(0);\r\n\r\n  const getProduct = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    setProductId(dataId);\r\n    if (dataId > 0) {\r\n      // edit\r\n      productService.get(dataId).then((res) => {\r\n        formik.setValues(res);\r\n        // setDetail(true);\r\n        console.log(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => setModalShow(false);\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    // const id = parseInt(dataId);\r\n    setProductId(dataId);\r\n    if (dataId > 0) {\r\n      // edit\r\n      productService.get(dataId).then((res) => {\r\n        console.log(res.image);\r\n        console.log(res);\r\n        formik.setValues({\r\n          code: res.code,\r\n          name: res.name,\r\n          unit: res.unit,\r\n          price: res.price,\r\n          status: res.status,\r\n          image: res.image,\r\n          description: res.description,\r\n          proTypeId: res.productType.id,\r\n        });\r\n        setImageReview(res.image);\r\n        setModalShow(true);\r\n      });\r\n    } else {\r\n      // add\r\n      formik.resetForm();\r\n      setModalShow(true);\r\n    }\r\n  };\r\n\r\n  const loadData = () => {\r\n    productTypeService.getAll().then((res) => {\r\n      setProductTypes(res);\r\n    });\r\n    productService.getAll().then((res) => {\r\n      setProducts(res);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (id === \"\" || id === null) return;\r\n    // setStateValues(statusArr);\r\n    loadData();\r\n  }, []);\r\n\r\n  // Validation\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: \"\",\r\n      name: \"\",\r\n      unit: \"\",\r\n      price: \"\",\r\n      status: \"AVAILABLE\",\r\n      image: \"\",\r\n      description: \"\",\r\n      proTypeId: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required(\"Required\"),\r\n      name: Yup.string().required(\"Required\"),\r\n      unit: Yup.string().required(\"Required\"),\r\n      price: Yup.number().required(\"Required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  // image handle\r\n  // const fileRef = React.createRef();\r\n  const [selectedFile, setSelectFile] = useState(null);\r\n  const [imageReview, setImageReview] = useState(\"\");\r\n\r\n  // const handleImageReview = (e) => {\r\n  //   // e.preventDefault();\r\n  //   setSelectFile(e.target.files[0]);\r\n  //   setImageReview(URL.createObjectURL(e.target.files[0]));\r\n  // };\r\n\r\n  // selection\r\n  // const onChangeSelected = (e) => {\r\n  //   console.log(e);\r\n  // };\r\n\r\n  const handleFormSubmit = (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"code\", data.code);\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"proTypeId\", data.proTypeId);\r\n    formData.append(\"unit\", data.unit);\r\n    formData.append(\"price\", Number(data.price));\r\n    formData.append(\"status\", data.status);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"photo\", data.image);\r\n    if (productId === null) {\r\n      console.log(data);\r\n      // add\r\n\r\n      // console.log(fileRef.current.files);\r\n      // console.log(fileRef.file);\r\n      // console.log(formData.values);\r\n      for (var value of formData.values()) {\r\n        console.log(value);\r\n      }\r\n\r\n      productService.add(formData).then((res) => {\r\n        toast.success(\"Add new data successfully\");\r\n        loadData();\r\n        handleModalClose();\r\n      });\r\n    } else {\r\n      // update\r\n      if (data.image.name === undefined) {\r\n        productService\r\n          .update(\r\n            productId,\r\n            data.code,\r\n            data.name,\r\n            data.proTypeId,\r\n            data.unit,\r\n            data.price,\r\n            data.status,\r\n            data.description\r\n          )\r\n          .then((res) => {\r\n            toast.success(\"Update data successfully\");\r\n            loadData();\r\n            handleModalClose();\r\n          });\r\n      } else {\r\n        console.log(\"Update hinhf\");\r\n        productService\r\n          .updateWithPhoto(\r\n            productId,\r\n            data.code,\r\n            data.name,\r\n            data.proTypeId,\r\n            data.unit,\r\n            data.price,\r\n            data.status,\r\n            data.description,\r\n            data.image\r\n          )\r\n          .then((res) => {\r\n            toast.success(\"Update data successfully oke\");\r\n            loadData();\r\n            handleModalClose();\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteRow = (e, dataId) => {\r\n    e.preventDefault();\r\n    productService.remove(dataId).then((res) => {\r\n      toast.warning(\"A data has been deleted!\");\r\n      loadData();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"container pt-4\">\r\n          <div className=\"card border-primary bt-primary-5\">\r\n            <div className=\"card-header\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h2 className=\"card-title\">Product Type List</h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    onClick={() => handleModalShow(null, null)}\r\n                  >\r\n                    <i className=\"fas fa-plus-circle mr-1\"></i>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-hover table-striped table-sm table-bordered text-center\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th scope=\"col\">No.</th>\r\n                    {/* <th onClick={sortData} scope=\"col\">\r\n                      Name{\" \"}\r\n                      <div\r\n                        className={\r\n                          sortDir === \"asc\"\r\n                            ? \"arrow arrow-up\"\r\n                            : \"arrow arrow-down\"\r\n                        }\r\n                      ></div>\r\n                    </th> */}\r\n                    <th scope=\"col\">Code</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Unit</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Image</th>\r\n                    {/* <th scope=\"col\">Description</th> */}\r\n                    <th scope=\"col\">Type</th>\r\n                    <th scope=\"col\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {products.map((product, idx) => {\r\n                    return (\r\n                      <tr key={product.id}>\r\n                        <th scope=\"row\">{idx + 1}</th>\r\n                        <td>{product.code}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.unit}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.status}</td>\r\n                        <td>\r\n                          <img\r\n                            src={product.image}\r\n                            alt={product.name}\r\n                            style={{ width: \"200px\", height: \"150px\" }}\r\n                          />\r\n                        </td>\r\n                        <td>{product.productType.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => getProduct(e, product.id)}\r\n                          >\r\n                            <i className=\"fas fa-eye text-primary\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => handleModalShow(e, product.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-success\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => deleteRow(e, product.id)}\r\n                          >\r\n                            <i className=\"fas fa-trash-alt text-danger\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* {productTypes.length > 0 ? (\r\n              <div className=\"card-footer\">\r\n                <div style={{ float: \"left\" }}>\r\n                  Showing Page {currentPage} of {totalPages}\r\n                </div>\r\n                <div style={{ float: \"right\" }}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={firstPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-backward\"></i> First\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={prevPage}\r\n                      >\r\n                        <i className=\"fas fa-step-backward\"></i> Prev\r\n                      </Button>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      className={\"page-num bg-light border-primary\"}\r\n                      name=\"currentPage\"\r\n                      value={currentPage}\r\n                      onChange={changePage}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={nextPage}\r\n                      >\r\n                        <i className=\"fas fa-step-forward\"></i> Next\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={lastPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-forward\"></i> Last\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </div>\r\n              </div>\r\n            ) : null} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Types</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <select\r\n              id=\"proTypeId\"\r\n              name=\"proTypeId\"\r\n              //value={formik.values.proTypeId}\r\n              // onChange={(value) => formik.setFieldValue(\"proTypeId\", value)}\r\n              onChange={formik.handleChange}\r\n              {...formik.getFieldProps(\"proTypeId\")}\r\n              // frmField={formik.getFieldProps(\"proTypeId\")}\r\n            >\r\n              <option>--Select product Type--</option>\r\n              {productTypes.map((type) => {\r\n                return (\r\n                  <option key={type.id} value={type.id}>\r\n                    {type.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <Input\r\n              id=\"txtCode\"\r\n              type=\"text\"\r\n              label=\"Code\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"code\")}\r\n              err={formik.touched.code && formik.errors.code}\r\n              errMessage={formik.errors.code}\r\n            />\r\n            <Input\r\n              id=\"txtName\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"name\")}\r\n              err={formik.touched.name && formik.errors.name}\r\n              errMessage={formik.errors.name}\r\n            />\r\n            <Input\r\n              id=\"txtUnit\"\r\n              type=\"text\"\r\n              label=\"Unit\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"unit\")}\r\n              err={formik.touched.unit && formik.errors.unit}\r\n              errMessage={formik.errors.unit}\r\n            />\r\n            <Input\r\n              id=\"txtPrice\"\r\n              type=\"text\"\r\n              label=\"Price\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"price\")}\r\n              err={formik.touched.price && formik.errors.price}\r\n              errMessage={formik.errors.price}\r\n            />\r\n            <fieldset className=\"form-group\">\r\n              <div className=\"row\">\r\n                <label className=\"col-form-label col-sm-3 pt-0\">Status</label>\r\n                <div className=\"col-sm-9\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"status\"\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      // defaultChecked\r\n                      checked={formik.values.status === \"AVAILABLE\"}\r\n                      //={formik.values.status === \"AVAILABLE\"}\r\n                      onChange={() => handleRadioChange(\"AVAILABLE\")}\r\n                      value=\"AVAILABLE\"\r\n                    />\r\n                    <label className=\"form-check-label\">AVAILABLE</label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"status\"\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      checked={formik.values.status === \"UNAVAILABLE\"}\r\n                      onChange={() => handleRadioChange(\"UNAVAILABLE\")}\r\n                      value=\"UNAVAILABLE\"\r\n                    />\r\n                    <label className=\"form-check-label\">UNAVAILABLE</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-form-label col-sm-3 pt-0\">Image</label>\r\n              <div className=\"col-sm-9\">\r\n                <img className=\"img-fluid\" src={imageReview} alt=\"example\" />\r\n                <input\r\n                  type=\"file\"\r\n                  // ref={fileRef}\r\n                  onChange={(e) => {\r\n                    setSelectFile(e.currentTarget.files[0]);\r\n                    setImageReview(\r\n                      URL.createObjectURL(e.currentTarget.files[0])\r\n                    );\r\n                    console.log(e.currentTarget.files[0]);\r\n                    formik.setFieldValue(\"image\", e.currentTarget.files[0]);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Input\r\n              id=\"txtDesc\"\r\n              rows=\"10\"\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              maxLength=\"200\"\r\n              frmField={formik.getFieldProps(\"description\")}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(formik.isValid && formik.dirty)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n      {/* End modal */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\controls\\Input.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\positionService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\productTypeService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\employeeService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\productService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\api.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\store\\index.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\store\\reducers\\auth.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\store\\actions.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\order.jsx",["166","167","168","169","170","171","172","173"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport TableService from './../services/TableService';\r\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\r\nimport './order.css';\r\nimport productService from './../services/productService';\r\nimport './style.css';\r\nimport { toast } from 'react-toastify';\r\nimport billDetailService from './../services/BillDetailService';\r\nimport billService from './../services/BillService';\r\nimport PromotionTypeService from './../services/promotionTypeService';\r\nimport { get, set } from 'store';\r\n\r\nconst Order = (props) => {\r\n\tconst [table, setTable] = useState([]);\r\n\tconst [product, setProduct] = useState([]);\r\n\tconst [billDetail, setBillDetail] = useState([]);\r\n\tconst [tableId, setTableId] = useState();\r\n\tconst [productId, setProductId] = useState();\r\n\tconst [billId, setBillId] = useState('');\r\n\tconst [value, setValue] = useState(0);\r\n\tconst [tableCode, setTableCode] = useState('');\r\n\tconst [tableCodeId, setTableCodeId] = useState('');\r\n\tconst [totalPrice, setTotalprice] = useState(0);\r\n\tconst [payMethod, setPayMethod] = useState('CASH');\r\n\tconst [promotionType, setPromotionType] = useState([]);\r\n\tconst [promotionId, setpromotionId] = useState('');\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\tconst [proDefaut, setproDefault] = useState(0);\r\n\tconst [bilIdMerge, setBillidMerge] = useState('');\r\n\tconst [name, setName] = useState('');\r\n\tconst handleModalClose = () => setModalShow(false);\r\n\tconst handleModalShow = () => {\r\n\t\tsetModalShow(true);\r\n\t};\r\n\tconst loadTable = () => {\r\n\t\tTableService.getAll().then((res) => {\r\n\t\t\tsetTable(res);\r\n\t\t});\r\n\t};\r\n\tconst loadPromotion = () => {\r\n\t\tPromotionTypeService.getAll().then((res) => {\r\n\t\t\tsetPromotionType(res);\r\n\t\t});\r\n\t};\r\n\tconst loadData = () => {\r\n\t\tproductService.getAll().then((res) => {\r\n\t\t\tsetProduct(res);\r\n\t\t});\r\n\t\tloadPromotion();\r\n\t\tloadTable();\r\n\t};\r\n\tconst formatMoney = (money) => {\r\n\t\tmoney = money.toLocaleString('en-US', { style: 'currency', currency: 'VND' });\r\n\t\treturn money;\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tloadData();\r\n\t\tloadTable();\r\n\t}, []);\r\n\tconst loadBillDetail = (bId) => {\r\n\t\tbillDetailService.get(bId).then((res) => {\r\n\t\t\tsetBillDetail(res);\r\n\t\t});\r\n\t};\r\n\tconst updateStatusTable = (tablId, status) => {\r\n\t\tTableService.get(tablId).then((res) => {\r\n\t\t\tres.status = status;\r\n\t\t\tTableService.updateStatus(tablId, res).then((res) => {\r\n\t\t\t\tloadTable();\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\tconst insertPro = (proId, price) => {\r\n\t\tif (billId === '') {\r\n\t\t\ttoast.error('Please choose table ');\r\n\t\t} else {\r\n\t\t\tbillDetailService.getById(billId, proId).then((res) => {\r\n\t\t\t\tif (res === null) {\r\n\t\t\t\t\tsetProductId(proId);\r\n\t\t\t\t\tlet tempDate = new Date();\r\n\t\t\t\t\tlet date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate();\r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t\t\tid: {\r\n\t\t\t\t\t\t\tbillId: billId,\r\n\t\t\t\t\t\t\tproductId: proId,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tamount: 1,\r\n\t\t\t\t\t\tprice: price,\r\n\t\t\t\t\t\tfinishedProductNum: 1,\r\n\t\t\t\t\t\torderDate: date,\r\n\t\t\t\t\t\tfinishedProductDate: date,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tbillDetailService.add(data, data.id.billId, data.id.productId).then((res) => {\r\n\t\t\t\t\t\tloadBillDetail(data.id.billId);\r\n\t\t\t\t\t\tgetTotalPrice(data.id.billId);\r\n\t\t\t\t\t\tupdateStatusTable(tableId, 'BOOKED');\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.amount = res.amount + 1;\r\n\t\t\t\t\tbillDetailService.update(res.id.billId, res.id.productId, res).then((res) => {\r\n\t\t\t\t\t\tloadBillDetail(res.id.billId);\r\n\t\t\t\t\t\tgetTotalPrice(res.id.billId);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst getTotalPrice = (id) => {\r\n\t\tvar x = 0;\r\n\t\tbillService.getTotalPrice(id).then((res) => {\r\n\t\t\tsetTotalprice(res);\r\n\t\t\tx = res;\r\n\t\t});\r\n\t\treturn x;\r\n\t};\r\n\tconst loadBill = (tablId) => {\r\n\t\tsetTableId(tablId);\r\n\t\tsetproDefault(0);\r\n\t\tsetValue(0);\r\n\t\tbillService.getBillByTableId(tablId).then((res) => {\r\n\t\t\tif (res === '') {\r\n\t\t\t\tbillService.add(tablId).then((data) => {\r\n\t\t\t\t\tsetBillId(data.id);\r\n\t\t\t\t\tloadBillDetail(data.id);\r\n\t\t\t\t\tgetTotalPrice(data.id);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetBillId(res.id);\r\n\t\t\t\tloadBillDetail(res.id);\r\n\t\t\t\tgetTotalPrice(res.id);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tconst add = (ind) => {\r\n\t\tbillDetail[ind].amount = billDetail[ind].amount + 1;\r\n\t\tbillDetailService\r\n\t\t\t.update(billDetail[ind].id.billId, billDetail[ind].id.productId, billDetail[ind])\r\n\t\t\t.then((res) => {\r\n\t\t\t\tloadBillDetail(res.id.billId);\r\n\t\t\t\tgetTotalPrice(res.id.billId);\r\n\t\t\t});\r\n\t};\r\n\tconst sub = (ind) => {\r\n\t\tif (billDetail[ind].amount >= 2) {\r\n\t\t\tbillDetail[ind].amount = billDetail[ind].amount - 1;\r\n\t\t\tbillDetailService\r\n\t\t\t\t.update(billDetail[ind].id.billId, billDetail[ind].id.productId, billDetail[ind])\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tloadBillDetail(res.id.billId);\r\n\t\t\t\t\tgetTotalPrice(res.id.billId);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst deleteRow = (e, bilId, productId) => {\r\n\t\te.preventDefault();\r\n\t\tbillDetailService.remove(bilId, productId).then((res) => {\r\n\t\t\tloadBillDetail(bilId);\r\n\t\t\tvar x = getTotalPrice(bilId);\r\n\t\t\tif (x === 0 || x === '') {\r\n\t\t\t\tupdateStatusTable(tableId, 'EMPTY');\r\n\t\t\t\tloadData();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tconst getBgColor = (status) => {\r\n\t\tif (status === 'BOOKED') {\r\n\t\t\treturn '#D8BFD8';\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\tconst valueChangePa = (e) => {\r\n\t\tsetPayMethod(e.target.value);\r\n\t};\r\n\tconst promoChange = (e) => {\r\n\t\tsetproDefault(e.target.value);\r\n\t\tgetTotalPrice(billId);\r\n\t\tvar m = totalPrice;\r\n\t\tvar id = e.target.value;\r\n\t\tif (id > 0) {\r\n\t\t\tsetpromotionId(id);\r\n\t\t\tPromotionTypeService.get(id).then((res) => {\r\n\t\t\t\tvar x = res.percent;\r\n\t\t\t\tvar percent = (x * m) / 100;\r\n\t\t\t\tsetValue(percent);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst payBill = () => {\r\n\t\tif (totalPrice > 0) {\r\n\t\t\tvar money = totalPrice - value;\r\n\t\t\tlet tempDate = new Date();\r\n\t\t\tlet date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate();\r\n\t\t\tbillService.update(billId, date, payMethod, tableId, '', promotionId, money).then((res) => {\r\n\t\t\t\tupdateStatusTable(tableId, 'EMPTY');\r\n\t\t\t\tloadData();\r\n\t\t\t\tsetBillId('');\r\n\t\t\t\tsetBillDetail([]);\r\n\t\t\t\tsetValue(0);\r\n\t\t\t\tsetTotalprice('');\r\n\t\t\t\ttoast.success('Pay success');\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttoast.error('No bill to pay');\r\n\t\t}\r\n\t};\r\n\tconst mergeBIll = () => {\r\n\t\tif (totalPrice > 0) {\r\n\t\t\thandleModalShow();\r\n\t\t} else {\r\n\t\t\ttoast.error('no value to merge');\r\n\t\t}\r\n\t};\r\n\tconst chooseTable = (id, code) => {\r\n\t\tsetTableCodeId(id);\r\n\t\tsetTableCode(code);\r\n\t\tgetbillIdByTableId(id);\r\n\t};\r\n\tconst getbillIdByTableId = (tablId) => {\r\n\t\tbillService.getBillByTableId(tablId).then((res) => {\r\n\t\t\tif (res === '') {\r\n\t\t\t\tbillService.add(tablId).then((data) => {\r\n\t\t\t\t\tsetBillidMerge(data.id);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetBillidMerge(res.id);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tconst mergeTable = () => {\r\n\t\tbillDetail.map((billD, ind) => {\r\n\t\t\tbillDetailService.getById(bilIdMerge, billD.id.productId).then((res) => {\r\n\t\t\t\tif (res === null) {\r\n\t\t\t\t\tconsole.log('here');\r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t\t\tid: {\r\n\t\t\t\t\t\t\tbillId: bilIdMerge,\r\n\t\t\t\t\t\t\tproductId: billD.id.productId,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tamount: billD.amount,\r\n\t\t\t\t\t\tprice: billD.product.price,\r\n\t\t\t\t\t\tfinishedProductNum: billD.amount,\r\n\t\t\t\t\t\torderDate: billD.orderDate,\r\n\t\t\t\t\t\tfinishedProductDate: billD.finishedProductDate,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbillDetailService.add(data, data.id.billId, data.id.productId).then((res) => {\r\n\t\t\t\t\t\tupdateStatusTable(tableCodeId, 'BOOKED');\r\n\t\t\t\t\t\tloadBill(tableCodeId);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('not null');\r\n\t\t\t\t\tres.amount = res.amount + billD.amount;\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tbillDetailService.update(res.id.billId, res.id.productId, res).then((res) => {\r\n\t\t\t\t\t\tloadBill(tableCodeId);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbillDetailService.remove(billD.id.billId, billD.id.productId).then((res) => {});\r\n\t\t\t});\r\n\t\t});\r\n\t\tupdateStatusTable(tableId, 'EMPTY');\r\n\t\tsetTotalprice(0);\r\n\t\t//\r\n\t\thandleModalClose();\r\n\t};\r\n\tconst searchData = () => {\r\n\t\tproductService.Find(name).then((res) => {\r\n\t\t\tsetProduct(res);\r\n\t\t});\r\n\t};\r\n\tconst searchChange = (event) => {\r\n\t\tconst searchText = event.target.value;\r\n\t\tsetName(searchText);\r\n\t};\r\n\tconst cancelSearch = () => {\r\n\t\tsetName(' ');\r\n\t\tloadData();\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t\t<div className=\"col-lg-7\">\r\n\t\t\t\t\t\t<div className=\"row \">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<ul className=\"nav nav-pills \" id=\"pills-tab\" role=\"tablist\">\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\" role=\"presentation\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"nav-link active\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"pills-home-tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"pill\"\r\n\t\t\t\t\t\t\t\t\t\t\t\thref=\"#pills-home\"\r\n\t\t\t\t\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-controls=\"pills-home\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-selected=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhòng Bàn\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\" role=\"presentation\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"pills-profile-tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"pill\"\r\n\t\t\t\t\t\t\t\t\t\t\t\thref=\"#pills-profile\"\r\n\t\t\t\t\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-controls=\"pills-profile\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-selected=\"false\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThực Đơn\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <div className=\"col-lg-6\">\r\n\t\t\t\t\t\t\t<form className=\"form-inline active-purple-4\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control form-control-sm mr-3 w-75\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\t\t\t\taria-label=\"Search\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-search\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12 pl-5\">\r\n\t\t\t\t\t\t\t\t<div className=\"tab-content\" id=\"pills-tabContent\">\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tab-pane fade show active\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"pills-home\"\r\n\t\t\t\t\t\t\t\t\t\trole=\"tabpanel\"\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"pills-home-tab\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t{table.map((tab, ind) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-2 text-center p-2\" key={tab.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: getBgColor(tab.status) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"orderTable\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={tab.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => loadBill(tab.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-table mt-2\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"mt-2\"> {tab.code}</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tab-pane fade\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"pills-profile\"\r\n\t\t\t\t\t\t\t\t\t\trole=\"tabpanel\"\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"pills-profile-tab\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"input-group mt-2 w-50 ml-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control w-50\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Recipient's username\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"basic-addon2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button class=\" btn btn-info\" id=\"basic-addon2\" onClick={searchData}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFind\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\" btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"basic-addon2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelSearch}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t{product.map((prod, ind) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={prod.id} className=\"col-lg-3 text-center p-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"orderProduct\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={prod.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => insertPro(prod.id, prod.price)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"mt-2\" alt={prod.name} src={prod.image} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"mt-2\"> {prod.name}</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tab-pane fade\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"pills-contact\"\r\n\t\t\t\t\t\t\t\t\t\trole=\"tabpanel\"\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"pills-contact-tab\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t<ul className=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\" role=\"presentation\">\r\n\t\t\t\t\t\t\t\t<p className=\"nav-link active\">BILL: {billId}</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<div className=\"bill\">\r\n\t\t\t\t\t\t\t<table className=\"tabless table table-hover table-striped  text-center\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr className=\"table-primary\">\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">No.</th>\r\n\t\t\t\t\t\t\t\t\t\t<th cope=\"col\" className=\"w-50\">\r\n\t\t\t\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"w-50\">\r\n\t\t\t\t\t\t\t\t\t\t\tQuantity\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody className=\"croll\">\r\n\t\t\t\t\t\t\t\t\t{billDetail.map((billD, ind) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ind + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{billD.product.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-4 spinner\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-left ml-1\" onClick={() => sub(ind)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-minus text-light  p-1 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"float-left ml-2\">{billD.amount}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-left ml-2\" onClick={() => add(ind)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-plus text-light  p-1\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{billD.product.price}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => deleteRow(e, billD.bill.id, billD.product.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-trash-alt text-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<h5 className=\"ml-4\">Total Price: {' ' + formatMoney(totalPrice - value) + ' '}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t\t<p className=\"mt-3 mr-2\">Payment Method:</p>\r\n\t\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tonChange={valueChangePa}\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"CASH\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"optradio\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\tCASH\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"CREDIT_CARD\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-check-input ml-2\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"optradio\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={valueChangePa}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\tCREDIT CARD\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t\t<p className=\"mt-3 mr-2\">Promotion Type:</p>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tvalue={proDefaut}\r\n\t\t\t\t\t\t\t\t\tonChange={promoChange}\r\n\t\t\t\t\t\t\t\t\tdisabled={totalPrice === '' || totalPrice === 0}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\">--Select Promotion--</option>\r\n\t\t\t\t\t\t\t\t\t{promotionType.map((promo, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={promo.id} key={promo.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{promo.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"text-center mt-2\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={payBill}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-donate mr-2\"></i>\r\n\t\t\t\t\t\t\t\t\tPAY BILL\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-warning ml-2\" onClick={mergeBIll}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-divide mr-2\"></i>\r\n\t\t\t\t\t\t\t\t\tMERGE TABLE\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal show={modalShow} onHide={handleModalClose} backdrop=\"static\" keyboard={false}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Choose Table:{' ' + tableCode}</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t\t\t\t<h5>Choose table to merge</h5>\r\n\t\t\t\t\t\t\t<div className=\"row tableMerge\">\r\n\t\t\t\t\t\t\t\t{table.map((tab, ind) => {\r\n\t\t\t\t\t\t\t\t\tif (tab.id !== tableId) {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-4  text-center p-\" key={tab.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"orderTable p-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={tab.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => chooseTable(tab.id, tab.code)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-table mt-2\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"mt-2\"> {tab.code}</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleModalClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={mergeTable} type=\"submit\" disabled={tableCode === ''}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Order;\r\n","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\TableService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\BillDetailService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\BillService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\services\\promotionTypeService.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\Bill.jsx",["174"],"/* eslint-disable no-unused-vars */\r\nimport React, { useState, Fragment, useEffect } from 'react';\r\nimport Input from '../controls/Input';\r\nimport Select from '../controls/select';\r\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport billService from './../services/BillService';\r\nimport employeeService from './../services/employeeService';\r\nimport promotionService from './../services/productTypeService';\r\nimport tableService from './../services/TableService';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Bill = (props) => {\r\n\tconst [bills, setBill] = useState([]);\r\n\tconst [employee, setEmployee] = useState([]);\r\n\tconst [promotion, setPromotion] = useState([]);\r\n\tconst [table, setTable] = useState([]);\r\n\tconst [typesPerPage, setTypesPerPage] = useState(10);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [totalPages, setTotalPages] = useState(0);\r\n\tconst [totalElements, setTotalElements] = useState(0);\r\n\tconst [sortDir, setSortDir] = useState('asc');\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [billId, setBillId] = useState();\r\n\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\tconst handleModalClose = () => setModalShow(false);\r\n\tconst getCurrenDate = () => {\r\n\t\tlet tempDate = new Date();\r\n\t\tlet date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate();\r\n\t\treturn date;\r\n\t};\r\n\tconst [currentDate, setCurrentdate] = useState(getCurrenDate());\r\n\t// Validation\r\n\r\n\t// paymentdate, paymentMethod, table, promotionType, employee\r\n\r\n\tconst loadData = (currentPage) => {\r\n\t\t// productTypeService.getAll().then((res) => {\r\n\t\t//   setProductTypes(res);\r\n\t\t// });\r\n\t\tcurrentPage -= 1;\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'http://localhost:8080/bills?pageNumber=' +\r\n\t\t\t\t\tcurrentPage +\r\n\t\t\t\t\t'&pageSize=' +\r\n\t\t\t\t\ttypesPerPage +\r\n\t\t\t\t\t'&sortBy=id&sortDir=' +\r\n\t\t\t\t\tsortDir\r\n\t\t\t)\r\n\t\t\t.then((res) => res.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tsetBill(data.content);\r\n\t\t\t\tsetTotalPages(data.totalPages);\r\n\t\t\t\tsetTotalElements(data.totalElements);\r\n\t\t\t\tsetCurrentPage(data.number + 1);\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCurrenDate();\r\n\t\tloadData(currentPage);\r\n\t}, []);\r\n\tconst firstPage = () => {\r\n\t\tlet firstPage = 1;\r\n\t\tif (currentPage > firstPage) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(firstPage);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(firstPage);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst prevPage = () => {\r\n\t\tlet prevPage = 1;\r\n\t\tif (currentPage > prevPage) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(currentPage - prevPage);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(currentPage - prevPage);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst lastPage = () => {\r\n\t\tlet condition = Math.ceil(totalElements / typesPerPage);\r\n\t\tif (currentPage < condition) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(condition);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(condition);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tconst nextPage = () => {\r\n\t\tif (currentPage < Math.ceil(totalElements / typesPerPage)) {\r\n\t\t\tif (search) {\r\n\t\t\t\tsearchData(currentPage + 1);\r\n\t\t\t} else {\r\n\t\t\t\tloadData(currentPage + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tconst searchData = (currentPage) => {\r\n\t\tcurrentPage -= 1;\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'http://localhost:8080/bills/findDate?date=' + search + '&page=' + currentPage + '&size=' + typesPerPage\r\n\t\t\t)\r\n\t\t\t.then((response) => response.data)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetBill(data.content);\r\n\t\t\t\tsetTotalPages(data.totalPages);\r\n\t\t\t\tsetTotalElements(data.totalElements);\r\n\t\t\t\tsetCurrentPage(data.number + 1);\r\n\t\t\t});\r\n\t};\r\n\tconst changePage = (event) => {\r\n\t\tlet targetPage = parseInt(event.target.value);\r\n\t\tif (search) {\r\n\t\t\tsearchData(targetPage);\r\n\t\t} else {\r\n\t\t\tloadData(targetPage);\r\n\t\t}\r\n\r\n\t\tevent.target.name = targetPage;\r\n\t};\r\n\tconst deleteRow = (e, dataId) => {\r\n\t\te.preventDefault();\r\n\t\tbillService.remove(dataId).then((res) => {\r\n\t\t\tloadData(currentPage);\r\n\t\t});\r\n\t};\r\n\r\n\tconst sortData = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsortDir === 'asc' ? setSortDir('desc') : setSortDir('asc');\r\n\t\t\tloadData(currentPage);\r\n\t\t}, 500);\r\n\t};\r\n\tconst searchChange = (event) => {\r\n\t\tconst searchText = event.target.value;\r\n\t\tsetSearch(searchText);\r\n\t};\r\n\tconst cancelSearch = () => {\r\n\t\tsetSearch('');\r\n\t\tloadData(currentPage);\r\n\t};\r\n\t// const searchData = () => {};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t<div className=\"input-group mt-2 ml-5\">\r\n\t\t\t\t\t<div aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t<button className=\"input-group-text\" id=\"basic-addon1\" onClick={searchData}>\r\n\t\t\t\t\t\t\tFind\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"input-group-text\" id=\"basic-addon1\" onClick={cancelSearch}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"container mt-1 text-center\">\r\n\t\t\t\t\t<div className=\"card border-primary bt-primary-5\">\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Bill List</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<table className=\"table table-hover table-striped table-bordered text-center\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr className=\"table-primary\">\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">No.</th>\r\n\t\t\t\t\t\t\t\t\t\t{/* <th onClick={sortData} scope=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\tPayment Date\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={sortDir === 'asc' ? 'arrow arrow-up' : 'arrow arrow-down'}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Payment Date</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Payment Method</th>\r\n\t\t\t\t\t\t\t\t\t\t{/* <th scope=\"col\">Employee Id</th> */}\r\n\t\t\t\t\t\t\t\t\t\t{/* <th scope=\"col\">Promotion Id</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Table Id</th>\r\n\t\t\t\t\t\t\t\t\t\t<th onClick={sortData} scope=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\tTotal price\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={sortDir === 'asc' ? 'arrow arrow-up' : 'arrow arrow-down'}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t{/* <th scope=\"col\">Total price</th> */}\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{bills.map((bill, idx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={bill.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{idx + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{bill.paymentDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{bill.paymentMethod}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{bill.employee.id}</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{bill.promotionType.name}</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{bill.table.code}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{bill.totalPrice}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"mr-2\" to={`/billDetails?id=${bill.id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-eye text-info\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/#\" onClick={(e) => deleteRow(e, bill.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash-alt text-danger\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{bills.length > 0 ? (\r\n\t\t\t\t\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t\t\t\t\t<div style={{ float: 'left' }}>\r\n\t\t\t\t\t\t\t\t\tShowing Page {currentPage} of {totalPages}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ float: 'right' }}>\r\n\t\t\t\t\t\t\t\t\t<InputGroup size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={firstPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-fast-backward\"></i> First\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={prevPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-step-backward\"></i> Prev\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={'page-num bg-light border-primary'}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"currentPage\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={currentPage}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={changePage}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === totalPages ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={nextPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-step-forward\"></i> Next\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={currentPage === totalPages ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={lastPage}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-fast-forward\"></i> Last\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\nexport default Bill;\r\n","C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\controls\\select.js",[],"C:\\Users\\Admin\\Desktop\\test2\\Unicorn\\restaurant-management\\src\\pages\\BillDetail.jsx",["175"],"/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport billDetailService from './../services/BillDetailService.js';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\r\nimport Input from '../controls/Input';\r\nimport Select from '../controls/select';\r\nimport queryString from 'query-string';\r\nimport productService from './../services/productService';\r\n\r\nconst BillDetail = (props) => {\r\n\tconst [billDetail, setBillDetail] = useState([]);\r\n\tconst [billId, setBillId] = useState(new URLSearchParams(props.location.search).get('id'));\r\n\tconst getCurrenDate = () => {\r\n\t\tlet tempDate = new Date();\r\n\t\tlet date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate();\r\n\t\treturn date;\r\n\t};\r\n\tconst [currentDate, setCurrentdate] = useState(getCurrenDate());\r\n\r\n\tconst loadBillDetail = (id) => {\r\n\t\tbillDetailService.get(id).then((res) => {\r\n\t\t\tsetBillDetail(res);\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tloadBillDetail(billId);\r\n\t}, []);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"card border-primary bt-primary-5\">\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Bill Details List</h2>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<table className=\"table table-hover table-striped table-bordered text-center\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr className=\"table-primary\">\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">No.</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Bill Id</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product Id</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Amount</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Order Date</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">quantity completed</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">finish day </th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{billDetail.map((billD, idx) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{idx + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.bill.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.product.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.amount}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <td>{moment(billD.orderDate).format('DD/MM/YYYY')}</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.orderDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.price}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.finishedProductNum}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{billD.finishedProductDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default BillDetail;\r\n",{"ruleId":"176","severity":1,"message":"177","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":9},{"ruleId":"176","severity":1,"message":"180","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":14},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"176","severity":1,"message":"185","line":13,"column":23,"nodeType":"178","messageId":"179","endLine":13,"endColumn":38},{"ruleId":"176","severity":1,"message":"186","line":55,"column":9,"nodeType":"178","messageId":"179","endLine":55,"endColumn":11},{"ruleId":"176","severity":1,"message":"187","line":55,"column":13,"nodeType":"178","messageId":"179","endLine":55,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":110,"column":5,"nodeType":"190","endLine":110,"endColumn":7,"suggestions":"191"},{"ruleId":"176","severity":1,"message":"192","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":15},{"ruleId":"176","severity":1,"message":"185","line":14,"column":24,"nodeType":"178","messageId":"179","endLine":14,"endColumn":39},{"ruleId":"176","severity":1,"message":"186","line":36,"column":10,"nodeType":"178","messageId":"179","endLine":36,"endColumn":12},{"ruleId":"176","severity":1,"message":"187","line":36,"column":14,"nodeType":"178","messageId":"179","endLine":36,"endColumn":19},{"ruleId":"188","severity":1,"message":"189","line":90,"column":6,"nodeType":"190","endLine":90,"endColumn":8,"suggestions":"193"},{"ruleId":"176","severity":1,"message":"192","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":15},{"ruleId":"176","severity":1,"message":"194","line":15,"column":27,"nodeType":"178","messageId":"179","endLine":15,"endColumn":46},{"ruleId":"176","severity":1,"message":"195","line":22,"column":9,"nodeType":"178","messageId":"179","endLine":22,"endColumn":17},{"ruleId":"176","severity":1,"message":"196","line":22,"column":19,"nodeType":"178","messageId":"179","endLine":22,"endColumn":30},{"ruleId":"176","severity":1,"message":"197","line":24,"column":9,"nodeType":"178","messageId":"179","endLine":24,"endColumn":13},{"ruleId":"176","severity":1,"message":"198","line":24,"column":15,"nodeType":"178","messageId":"179","endLine":24,"endColumn":22},{"ruleId":"176","severity":1,"message":"186","line":59,"column":9,"nodeType":"178","messageId":"179","endLine":59,"endColumn":11},{"ruleId":"176","severity":1,"message":"187","line":59,"column":13,"nodeType":"178","messageId":"179","endLine":59,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":100,"column":5,"nodeType":"190","endLine":100,"endColumn":7,"suggestions":"199"},{"ruleId":"188","severity":1,"message":"189","line":150,"column":5,"nodeType":"190","endLine":150,"endColumn":7,"suggestions":"200"},{"ruleId":"176","severity":1,"message":"201","line":3,"column":18,"nodeType":"178","messageId":"179","endLine":3,"endColumn":29},{"ruleId":"176","severity":1,"message":"202","line":3,"column":31,"nodeType":"178","messageId":"179","endLine":3,"endColumn":41},{"ruleId":"176","severity":1,"message":"203","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":13},{"ruleId":"176","severity":1,"message":"204","line":14,"column":10,"nodeType":"178","messageId":"179","endLine":14,"endColumn":21},{"ruleId":"176","severity":1,"message":"205","line":14,"column":23,"nodeType":"178","messageId":"179","endLine":14,"endColumn":37},{"ruleId":"176","severity":1,"message":"206","line":15,"column":10,"nodeType":"178","messageId":"179","endLine":15,"endColumn":20},{"ruleId":"176","severity":1,"message":"207","line":15,"column":22,"nodeType":"178","messageId":"179","endLine":15,"endColumn":35},{"ruleId":"176","severity":1,"message":"208","line":16,"column":10,"nodeType":"178","messageId":"179","endLine":16,"endColumn":23},{"ruleId":"176","severity":1,"message":"209","line":16,"column":25,"nodeType":"178","messageId":"179","endLine":16,"endColumn":41},{"ruleId":"176","severity":1,"message":"210","line":17,"column":10,"nodeType":"178","messageId":"179","endLine":17,"endColumn":17},{"ruleId":"176","severity":1,"message":"211","line":17,"column":19,"nodeType":"178","messageId":"179","endLine":17,"endColumn":29},{"ruleId":"176","severity":1,"message":"212","line":18,"column":10,"nodeType":"178","messageId":"179","endLine":18,"endColumn":16},{"ruleId":"176","severity":1,"message":"213","line":18,"column":18,"nodeType":"178","messageId":"179","endLine":18,"endColumn":27},{"ruleId":"176","severity":1,"message":"214","line":29,"column":10,"nodeType":"178","messageId":"179","endLine":29,"endColumn":16},{"ruleId":"176","severity":1,"message":"215","line":30,"column":9,"nodeType":"178","messageId":"179","endLine":30,"endColumn":26},{"ruleId":"176","severity":1,"message":"216","line":121,"column":10,"nodeType":"178","messageId":"179","endLine":121,"endColumn":22},{"ruleId":"176","severity":1,"message":"201","line":3,"column":18,"nodeType":"178","messageId":"179","endLine":3,"endColumn":29},{"ruleId":"176","severity":1,"message":"202","line":3,"column":31,"nodeType":"178","messageId":"179","endLine":3,"endColumn":41},{"ruleId":"176","severity":1,"message":"217","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":13},{"ruleId":"176","severity":1,"message":"218","line":11,"column":15,"nodeType":"178","messageId":"179","endLine":11,"endColumn":18},{"ruleId":"176","severity":1,"message":"219","line":18,"column":9,"nodeType":"178","messageId":"179","endLine":18,"endColumn":18},{"ruleId":"188","severity":1,"message":"220","line":59,"column":5,"nodeType":"190","endLine":59,"endColumn":7,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":232,"column":31,"nodeType":"224","messageId":"225","endLine":232,"endColumn":33},{"ruleId":"222","severity":1,"message":"226","line":534,"column":31,"nodeType":"224","messageId":"227","endLine":534,"endColumn":33},{"ruleId":"188","severity":1,"message":"189","line":67,"column":5,"nodeType":"190","endLine":67,"endColumn":7,"suggestions":"228"},{"ruleId":"188","severity":1,"message":"229","line":29,"column":5,"nodeType":"190","endLine":29,"endColumn":7,"suggestions":"230"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"'setTypesPerPage' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'loadData'. Either include them or remove the dependency array.","ArrayExpression",["233"],"'event' is defined but never used.",["234"],"'setEmployeesPerPage' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'site' is assigned a value but never used.","'setSite' is assigned a value but never used.",["235"],["236"],"'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'axios' is defined but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'setTotalPages' is assigned a value but never used.","'totalElements' is assigned a value but never used.","'setTotalElements' is assigned a value but never used.","'sortDir' is assigned a value but never used.","'setSortDir' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'detail' is assigned a value but never used.","'handleDetailClose' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'get' is defined but never used.","'set' is defined but never used.","'productId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["237"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["238"],"React Hook useEffect has a missing dependency: 'billId'. Either include it or remove the dependency array.",["239"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"240","fix":"242"},{"desc":"240","fix":"243"},{"desc":"240","fix":"244"},{"desc":"245","fix":"246"},{"desc":"240","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [currentPage, loadData]",{"range":"250","text":"251"},{"range":"252","text":"251"},{"range":"253","text":"251"},{"range":"254","text":"251"},"Update the dependencies array to be: [loadData]",{"range":"255","text":"256"},{"range":"257","text":"251"},"Update the dependencies array to be: [billId]",{"range":"258","text":"259"},[2892,2894],"[currentPage, loadData]",[2580,2582],[3150,3152],[4284,4286],[2101,2103],"[loadData]",[2272,2274],[1092,1094],"[billId]"]