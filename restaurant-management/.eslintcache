[{"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\index.js":"1","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\App.js":"2","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\reportWebVitals.js":"3","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\DefaultLayout.js":"4","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\Footer.js":"5","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\routes.js":"6","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\Header.js":"7","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\Welcome.js":"8","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\products\\ProductList.js":"9","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\product-types\\ProductTypeList.js":"10","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\productTypeService.js":"11","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\controls\\Input.js":"12","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\productService.js":"13","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\api.js":"14","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\bangtinh.jsx":"15","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\menu.jsx":"16","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\tabs.jsx":"17","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\hoadon.jsx":"18","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\roomtables.jsx":"19","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\hoadonct.jsx":"20","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\bookingTableService.js":"21","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\action\\action.js":"22","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\config\\store.js":"23","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\reducer\\index.js":"24","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\reducer\\tableReducer.js":"25","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\productListService.js":"26"},{"size":1318,"mtime":1609144096018,"results":"27","hashOfConfig":"28"},{"size":382,"mtime":1609139805899,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1609139805899,"results":"30","hashOfConfig":"28"},{"size":826,"mtime":1609139805899,"results":"31","hashOfConfig":"28"},{"size":539,"mtime":1609139805899,"results":"32","hashOfConfig":"28"},{"size":1147,"mtime":1609142596313,"results":"33","hashOfConfig":"28"},{"size":2432,"mtime":1609139805899,"results":"34","hashOfConfig":"28"},{"size":582,"mtime":1609139805899,"results":"35","hashOfConfig":"28"},{"size":17467,"mtime":1609139805899,"results":"36","hashOfConfig":"28"},{"size":14477,"mtime":1609139805899,"results":"37","hashOfConfig":"28"},{"size":637,"mtime":1609139805899,"results":"38","hashOfConfig":"28"},{"size":2516,"mtime":1609139805899,"results":"39","hashOfConfig":"28"},{"size":1985,"mtime":1609139805899,"results":"40","hashOfConfig":"28"},{"size":488,"mtime":1609143653817,"results":"41","hashOfConfig":"28"},{"size":5783,"mtime":1609142370754,"results":"42","hashOfConfig":"28"},{"size":2186,"mtime":1609142421731,"results":"43","hashOfConfig":"28"},{"size":3330,"mtime":1609142464812,"results":"44","hashOfConfig":"28"},{"size":2600,"mtime":1609142394951,"results":"45","hashOfConfig":"28"},{"size":2764,"mtime":1609142447197,"results":"46","hashOfConfig":"28"},{"size":2265,"mtime":1609143264660,"results":"47","hashOfConfig":"28"},{"size":587,"mtime":1609142730832,"results":"48","hashOfConfig":"28"},{"size":210,"mtime":1609142876870,"results":"49","hashOfConfig":"28"},{"size":143,"mtime":1609143196835,"results":"50","hashOfConfig":"28"},{"size":190,"mtime":1609143259470,"results":"51","hashOfConfig":"28"},{"size":474,"mtime":1609143259476,"results":"52","hashOfConfig":"28"},{"size":196,"mtime":1609143334764,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1lyefid",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\index.js",["117","118"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// REDUX\r\nimport { Provider } from \"react-redux\";\r\n//import store from \"./store\";\r\nimport store from \"./config/store\";\r\n\r\ntoast.configure({\r\n  autoClose: 3000,\r\n  draggable: false,\r\n  position: \"top-right\",\r\n  hideProgressBar: false,\r\n  newestOnTop: true,\r\n  closeOnClick: true,\r\n  rtl: false,\r\n  pauseOnFocusLoss: true,\r\n  pauseOnHover: true,\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["119","120"],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\App.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\reportWebVitals.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\DefaultLayout.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\Footer.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\routes.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\Header.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\containers\\Welcome.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\products\\ProductList.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Input from \"../../controls/Input\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\nimport productService from \"../../services/productService\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport productTypeService from \"../../services/productTypeService\";\r\n\r\nconst ProductList = (props) => {\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalElements, setTotalElements] = useState(0);\r\n  const [sortDir, setSortDir] = useState(\"asc\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // radio button\r\n  // product status\r\n  const handleRadioChange = (value) => {\r\n    formik.setFieldValue(\"status\", value);\r\n  };\r\n\r\n  // get product ID\r\n  const [detail, setDetail] = useState(false);\r\n  const handleDetailClose = () => setDetail(false);\r\n  const [productId, setProductId] = useState(0);\r\n\r\n  const getProduct = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    setProductId(dataId);\r\n    if (dataId > 0) {\r\n      // edit\r\n      productService.get(dataId).then((res) => {\r\n        formik.setValues(res);\r\n        // setDetail(true);\r\n        console.log(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => setModalShow(false);\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    // const id = parseInt(dataId);\r\n    setProductId(dataId);\r\n    if (dataId > 0) {\r\n      // edit\r\n      productService.get(dataId).then((res) => {\r\n        console.log(res.image);\r\n        console.log(res);\r\n        formik.setValues({\r\n          code: res.code,\r\n          name: res.name,\r\n          unit: res.unit,\r\n          price: res.price,\r\n          status: res.status,\r\n          image: res.image,\r\n          description: res.description,\r\n          proTypeId: res.productType.id,\r\n        });\r\n        setImageReview(res.image);\r\n        setModalShow(true);\r\n      });\r\n    } else {\r\n      // add\r\n      formik.resetForm();\r\n      setModalShow(true);\r\n    }\r\n  };\r\n\r\n  const loadData = () => {\r\n    productTypeService.getAll().then((res) => {\r\n      setProductTypes(res);\r\n    });\r\n    productService.getAll().then((res) => {\r\n      setProducts(res);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (id === \"\" || id === null) return;\r\n    // setStateValues(statusArr);\r\n    loadData();\r\n  }, []);\r\n\r\n  // Validation\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: \"\",\r\n      name: \"\",\r\n      unit: \"\",\r\n      price: \"\",\r\n      status: \"AVAILABLE\",\r\n      image: \"\",\r\n      description: \"\",\r\n      proTypeId: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required(\"Required\"),\r\n      name: Yup.string().required(\"Required\"),\r\n      unit: Yup.string().required(\"Required\"),\r\n      price: Yup.number().required(\"Required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  // image handle\r\n  // const fileRef = React.createRef();\r\n  const [selectedFile, setSelectFile] = useState(null);\r\n  const [imageReview, setImageReview] = useState(\"\");\r\n\r\n  // const handleImageReview = (e) => {\r\n  //   // e.preventDefault();\r\n  //   setSelectFile(e.target.files[0]);\r\n  //   setImageReview(URL.createObjectURL(e.target.files[0]));\r\n  // };\r\n\r\n  // selection\r\n  // const onChangeSelected = (e) => {\r\n  //   console.log(e);\r\n  // };\r\n\r\n  const handleFormSubmit = (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"code\", data.code);\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"proTypeId\", data.proTypeId);\r\n    formData.append(\"unit\", data.unit);\r\n    formData.append(\"price\", Number(data.price));\r\n    formData.append(\"status\", data.status);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"photo\", data.image);\r\n    if (productId === null) {\r\n      console.log(data);\r\n      // add\r\n\r\n      // console.log(fileRef.current.files);\r\n      // console.log(fileRef.file);\r\n      // console.log(formData.values);\r\n      for (var value of formData.values()) {\r\n        console.log(value);\r\n      }\r\n\r\n      productService.add(formData).then((res) => {\r\n        toast.success(\"Add new data successfully\");\r\n        loadData();\r\n        handleModalClose();\r\n      });\r\n    } else {\r\n      // update\r\n      if (data.image.name === undefined) {\r\n        productService\r\n          .update(\r\n            productId,\r\n            data.code,\r\n            data.name,\r\n            data.proTypeId,\r\n            data.unit,\r\n            data.price,\r\n            data.status,\r\n            data.description\r\n          )\r\n          .then((res) => {\r\n            toast.success(\"Update data successfully\");\r\n            loadData();\r\n            handleModalClose();\r\n          });\r\n      } else {\r\n        console.log(\"Update hinhf\");\r\n        productService\r\n          .updateWithPhoto(\r\n            productId,\r\n            data.code,\r\n            data.name,\r\n            data.proTypeId,\r\n            data.unit,\r\n            data.price,\r\n            data.status,\r\n            data.description,\r\n            data.image\r\n          )\r\n          .then((res) => {\r\n            toast.success(\"Update data successfully oke\");\r\n            loadData();\r\n            handleModalClose();\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteRow = (e, dataId) => {\r\n    e.preventDefault();\r\n    productService.remove(dataId).then((res) => {\r\n      toast.warning(\"A data has been deleted!\");\r\n      loadData();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"container pt-4\">\r\n          <div className=\"card border-primary bt-primary-5\">\r\n            <div className=\"card-header\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h2 className=\"card-title\">Product Type List</h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    onClick={() => handleModalShow(null, null)}\r\n                  >\r\n                    <i className=\"fas fa-plus-circle mr-1\"></i>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-hover table-striped table-sm table-bordered text-center\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th scope=\"col\">No.</th>\r\n                    {/* <th onClick={sortData} scope=\"col\">\r\n                      Name{\" \"}\r\n                      <div\r\n                        className={\r\n                          sortDir === \"asc\"\r\n                            ? \"arrow arrow-up\"\r\n                            : \"arrow arrow-down\"\r\n                        }\r\n                      ></div>\r\n                    </th> */}\r\n                    <th scope=\"col\">Code</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Unit</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Image</th>\r\n                    {/* <th scope=\"col\">Description</th> */}\r\n                    <th scope=\"col\">Type</th>\r\n                    <th scope=\"col\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {products.map((product, idx) => {\r\n                    return (\r\n                      <tr key={product.id}>\r\n                        <th scope=\"row\">{idx + 1}</th>\r\n                        <td>{product.code}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.unit}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.status}</td>\r\n                        <td>\r\n                          <img\r\n                            src={product.image}\r\n                            alt={product.name}\r\n                            style={{ width: \"200px\", height: \"150px\" }}\r\n                          />\r\n                        </td>\r\n                        <td>{product.productType.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => getProduct(e, product.id)}\r\n                          >\r\n                            <i className=\"fas fa-eye text-primary\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => handleModalShow(e, product.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-success\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => deleteRow(e, product.id)}\r\n                          >\r\n                            <i className=\"fas fa-trash-alt text-danger\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* {productTypes.length > 0 ? (\r\n              <div className=\"card-footer\">\r\n                <div style={{ float: \"left\" }}>\r\n                  Showing Page {currentPage} of {totalPages}\r\n                </div>\r\n                <div style={{ float: \"right\" }}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={firstPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-backward\"></i> First\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={prevPage}\r\n                      >\r\n                        <i className=\"fas fa-step-backward\"></i> Prev\r\n                      </Button>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      className={\"page-num bg-light border-primary\"}\r\n                      name=\"currentPage\"\r\n                      value={currentPage}\r\n                      onChange={changePage}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={nextPage}\r\n                      >\r\n                        <i className=\"fas fa-step-forward\"></i> Next\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={lastPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-forward\"></i> Last\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </div>\r\n              </div>\r\n            ) : null} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Types</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <select\r\n              id=\"proTypeId\"\r\n              name=\"proTypeId\"\r\n              //value={formik.values.proTypeId}\r\n              // onChange={(value) => formik.setFieldValue(\"proTypeId\", value)}\r\n              onChange={formik.handleChange}\r\n              {...formik.getFieldProps(\"proTypeId\")}\r\n              // frmField={formik.getFieldProps(\"proTypeId\")}\r\n            >\r\n              <option>--Select product Type--</option>\r\n              {productTypes.map((type) => {\r\n                return (\r\n                  <option key={type.id} value={type.id}>\r\n                    {type.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <Input\r\n              id=\"txtCode\"\r\n              type=\"text\"\r\n              label=\"Code\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"code\")}\r\n              err={formik.touched.code && formik.errors.code}\r\n              errMessage={formik.errors.code}\r\n            />\r\n            <Input\r\n              id=\"txtName\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"name\")}\r\n              err={formik.touched.name && formik.errors.name}\r\n              errMessage={formik.errors.name}\r\n            />\r\n            <Input\r\n              id=\"txtUnit\"\r\n              type=\"text\"\r\n              label=\"Unit\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"unit\")}\r\n              err={formik.touched.unit && formik.errors.unit}\r\n              errMessage={formik.errors.unit}\r\n            />\r\n            <Input\r\n              id=\"txtPrice\"\r\n              type=\"text\"\r\n              label=\"Price\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"price\")}\r\n              err={formik.touched.price && formik.errors.price}\r\n              errMessage={formik.errors.price}\r\n            />\r\n            <fieldset className=\"form-group\">\r\n              <div className=\"row\">\r\n                <label className=\"col-form-label col-sm-3 pt-0\">Status</label>\r\n                <div className=\"col-sm-9\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"status\"\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      // defaultChecked\r\n                      checked={formik.values.status === \"AVAILABLE\"}\r\n                      //={formik.values.status === \"AVAILABLE\"}\r\n                      onChange={() => handleRadioChange(\"AVAILABLE\")}\r\n                      value=\"AVAILABLE\"\r\n                    />\r\n                    <label className=\"form-check-label\">AVAILABLE</label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"status\"\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      checked={formik.values.status === \"UNAVAILABLE\"}\r\n                      onChange={() => handleRadioChange(\"UNAVAILABLE\")}\r\n                      value=\"UNAVAILABLE\"\r\n                    />\r\n                    <label className=\"form-check-label\">UNAVAILABLE</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-form-label col-sm-3 pt-0\">Image</label>\r\n              <div className=\"col-sm-9\">\r\n                <img className=\"img-fluid\" src={imageReview} alt=\"example\" />\r\n                <input\r\n                  type=\"file\"\r\n                  // ref={fileRef}\r\n                  onChange={(e) => {\r\n                    setSelectFile(e.currentTarget.files[0]);\r\n                    setImageReview(\r\n                      URL.createObjectURL(e.currentTarget.files[0])\r\n                    );\r\n                    console.log(e.currentTarget.files[0]);\r\n                    formik.setFieldValue(\"image\", e.currentTarget.files[0]);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Input\r\n              id=\"txtDesc\"\r\n              rows=\"10\"\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              maxLength=\"200\"\r\n              frmField={formik.getFieldProps(\"description\")}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(formik.isValid && formik.dirty)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n      {/* End modal */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\product-types\\ProductTypeList.js",["137","138","139","140"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Input from \"../../controls/Input\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\nimport productTypeService from \"../../services/productTypeService\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProductTypeList = (props) => {\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [typesPerPage, setTypesPerPage] = useState(3);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalElements, setTotalElements] = useState(0);\r\n  const [sortDir, setSortDir] = useState(\"asc\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Validation\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      description: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Required\"),\r\n      // .min(5, \"Must be 5 characters or more.\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // get product type ID\r\n  const [detail, setDetail] = useState(false);\r\n  const handleDetailClose = () => setDetail(false);\r\n  const getProductType = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    setProductTypeId(dataId);\r\n    if (dataId > 0) {\r\n      // edit\r\n      productTypeService.get(dataId).then((res) => {\r\n        formik.setValues(res);\r\n        setDetail(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  const [id, setId] = useState(1);\r\n  const [productTypeId, setProductTypeId] = useState(0);\r\n\r\n  const handleModalClose = () => setModalShow(false);\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    setProductTypeId(dataId);\r\n    if (dataId > 0) {\r\n      // edit\r\n      productTypeService.get(dataId).then((res) => {\r\n        formik.setValues(res);\r\n        setModalShow(true);\r\n      });\r\n    } else {\r\n      // add\r\n      formik.resetForm();\r\n      setModalShow(true);\r\n    }\r\n  };\r\n\r\n  const sortData = () => {\r\n    setTimeout(() => {\r\n      sortDir === \"asc\" ? setSortDir(\"desc\") : setSortDir(\"asc\");\r\n      loadData(currentPage);\r\n    }, 500);\r\n  };\r\n\r\n  const loadData = (currentPage) => {\r\n    // productTypeService.getAll().then((res) => {\r\n    //   setProductTypes(res);\r\n    // });\r\n    currentPage -= 1;\r\n    axios\r\n      .get(\r\n        \"http://localhost:8080/productTypes?pageNumber=\" +\r\n          currentPage +\r\n          \"&pageSize=\" +\r\n          typesPerPage +\r\n          \"&sortBy=name&sortDir=\" +\r\n          sortDir\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setProductTypes(data.content);\r\n        setTotalPages(data.totalPages);\r\n        setTotalElements(data.totalElements);\r\n        setCurrentPage(data.number + 1);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (id === \"\" || id === null) return;\r\n    loadData(currentPage);\r\n  }, []);\r\n\r\n  const handleFormSubmit = (data) => {\r\n    if (productTypeId === null) {\r\n      // add\r\n      productTypeService.add(data).then((res) => {\r\n        toast.success(\"Add new data successfully\");\r\n        loadData(currentPage);\r\n        handleModalClose();\r\n      });\r\n    } else {\r\n      // update\r\n      productTypeService.update(productTypeId, data).then((res) => {\r\n        toast.success(\"Update data successfully\");\r\n        loadData(currentPage);\r\n        handleModalClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteRow = (e, dataId) => {\r\n    e.preventDefault();\r\n    productTypeService.remove(dataId).then((res) => {\r\n      toast.warning(\"A data has been deleted!\");\r\n      loadData(currentPage);\r\n    });\r\n  };\r\n\r\n  const changePage = (event) => {\r\n    let targetPage = parseInt(event.target.value);\r\n    if (search) {\r\n      searchData(targetPage);\r\n    } else {\r\n      loadData(targetPage);\r\n    }\r\n\r\n    event.target.name = targetPage;\r\n  };\r\n\r\n  const firstPage = () => {\r\n    let firstPage = 1;\r\n    if (currentPage > firstPage) {\r\n      if (search) {\r\n        searchData(firstPage);\r\n      } else {\r\n        loadData(firstPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    let prevPage = 1;\r\n    if (currentPage > prevPage) {\r\n      if (search) {\r\n        searchData(currentPage - prevPage);\r\n      } else {\r\n        loadData(currentPage - prevPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const lastPage = () => {\r\n    let condition = Math.ceil(totalElements / typesPerPage);\r\n    if (currentPage < condition) {\r\n      if (search) {\r\n        searchData(condition);\r\n      } else {\r\n        loadData(condition);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < Math.ceil(totalElements / typesPerPage)) {\r\n      if (search) {\r\n        searchData(currentPage + 1);\r\n      } else {\r\n        loadData(currentPage + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchChange = (event) => {\r\n    const searchText = event.target.value;\r\n    setSearch(searchText);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    setSearch(\"\");\r\n    loadData(currentPage);\r\n  };\r\n\r\n  const searchData = (currentPage) => {\r\n    currentPage -= 1;\r\n    axios\r\n      .get(\r\n        \"http://localhost:8080/productTypes/search/\" +\r\n          search +\r\n          \"?page=\" +\r\n          currentPage +\r\n          \"&size=\" +\r\n          typesPerPage\r\n      )\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        setProductTypes(data.content);\r\n        setTotalPages(data.totalPages);\r\n        setTotalElements(data.totalElements);\r\n        setCurrentPage(data.number + 1);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"container pt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n              <InputGroup size=\"sm\">\r\n                <FormControl\r\n                  placeholder=\"Search\"\r\n                  name=\"search\"\r\n                  className={\"border-primary bg-light text-dark\"}\r\n                  onChange={searchChange}\r\n                  value={search}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-success\"\r\n                    type=\"button\"\r\n                    onClick={searchData}\r\n                  >\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-danger\"\r\n                    type=\"button\"\r\n                    onClick={cancelSearch}\r\n                  >\r\n                    <i className=\"fas fa-times\"></i>\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container pt-4\">\r\n          <div className=\"card border-primary bt-primary-5\">\r\n            <div className=\"card-header\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h2 className=\"card-title\">Product Type List</h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    onClick={() => handleModalShow(null, null)}\r\n                  >\r\n                    <i className=\"fas fa-plus-circle mr-1\"></i>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-hover table-striped table-bordered text-center\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th scope=\"col\">No.</th>\r\n                    <th onClick={sortData} scope=\"col\">\r\n                      Name{\" \"}\r\n                      <div\r\n                        className={\r\n                          sortDir === \"asc\"\r\n                            ? \"arrow arrow-up\"\r\n                            : \"arrow arrow-down\"\r\n                        }\r\n                      ></div>\r\n                    </th>\r\n                    {/* <th scope=\"col\">Description</th> */}\r\n                    <th scope=\"col\"></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {productTypes.map((productType, idx) => {\r\n                    return (\r\n                      <tr key={productType.id}>\r\n                        <th scope=\"row\">{idx + 1}</th>\r\n                        <td>{productType.name}</td>\r\n                        {/* <td>{productType.description}</td> */}\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => getProductType(e, productType.id)}\r\n                          >\r\n                            <i className=\"fas fa-eye text-primary\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            className=\"mr-2\"\r\n                            onClick={(e) => handleModalShow(e, productType.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-success\"></i>\r\n                          </a>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => deleteRow(e, productType.id)}\r\n                          >\r\n                            <i className=\"fas fa-trash-alt text-danger\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {productTypes.length > 0 ? (\r\n              <div className=\"card-footer\">\r\n                <div style={{ float: \"left\" }}>\r\n                  Showing Page {currentPage} of {totalPages}\r\n                </div>\r\n                <div style={{ float: \"right\" }}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={firstPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-backward\"></i> First\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === 1 ? true : false}\r\n                        onClick={prevPage}\r\n                      >\r\n                        <i className=\"fas fa-step-backward\"></i> Prev\r\n                      </Button>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      className={\"page-num bg-light border-primary\"}\r\n                      name=\"currentPage\"\r\n                      value={currentPage}\r\n                      onChange={changePage}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={nextPage}\r\n                      >\r\n                        <i className=\"fas fa-step-forward\"></i> Next\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline-primary\"\r\n                        disabled={currentPage === totalPages ? true : false}\r\n                        onClick={lastPage}\r\n                      >\r\n                        <i className=\"fas fa-fast-forward\"></i> Last\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Types</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtName\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"name\")}\r\n              err={formik.touched.name && formik.errors.name}\r\n              errMessage={formik.errors.name}\r\n            />\r\n            <div className=\"form-group row\"></div>\r\n            <Input\r\n              id=\"txtDesc\"\r\n              rows=\"10\"\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              maxLength=\"200\"\r\n              frmField={formik.getFieldProps(\"description\")}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(formik.isValid && formik.dirty)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n      {/* End modal */}\r\n\r\n      <Modal\r\n        show={detail}\r\n        onHide={handleDetailClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Type Detail</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Input\r\n            label=\"Name\"\r\n            frmField={formik.getFieldProps(\"name\")}\r\n            readonly\r\n          />\r\n          <Input\r\n            label=\"Description\"\r\n            frmField={formik.getFieldProps(\"description\")}\r\n            readonly\r\n            rows=\"10\"\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductTypeList;\r\n","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\productTypeService.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\controls\\Input.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\productService.js",["141"],"import { Fragment } from \"react\";\r\nimport api from \"../services/api\";\r\n\r\nconst getAll = () =>\r\n  api.get(`${api.url.products}/getAllProducts`).then((res) => res.data);\r\nconst get = (id) =>\r\n  api.get(`${api.url.products}/${id}`).then((res) => res.data);\r\nconst add = (formData) => {\r\n  return api\r\n    .post(api.url.products, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((res) => res.data);\r\n};\r\nconst update = (\r\n  id,\r\n  code,\r\n  name,\r\n  proTypeId,\r\n  unit,\r\n  price,\r\n  status,\r\n  description\r\n) => {\r\n  const formData = new FormData();\r\n  formData.append(\"code\", code);\r\n  formData.append(\"name\", name);\r\n  formData.append(\"proTypeId\", proTypeId);\r\n  formData.append(\"unit\", unit);\r\n  formData.append(\"price\", Number(price));\r\n  formData.append(\"status\", status);\r\n  formData.append(\"description\", description);\r\n  return api\r\n    .put(`${api.url.products}/updateProductWTI/${id}`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((res) => res.data);\r\n};\r\n\r\nconst updateWithPhoto = (\r\n  id,\r\n  code,\r\n  name,\r\n  proTypeId,\r\n  unit,\r\n  price,\r\n  status,\r\n  description,\r\n  photo\r\n) => {\r\n  const formData = new FormData();\r\n  formData.append(\"code\", code);\r\n  formData.append(\"name\", name);\r\n  formData.append(\"proTypeId\", proTypeId);\r\n  formData.append(\"unit\", unit);\r\n  formData.append(\"price\", Number(price));\r\n  formData.append(\"status\", status);\r\n  formData.append(\"description\", description);\r\n  formData.append(\"photo\", photo);\r\n  return api\r\n    .put(`${api.url.products}/updateProduct/${id}`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((res) => res.data);\r\n};\r\nconst remove = (id) =>\r\n  api.delete(`${api.url.products}/${id}`).then((res) => res.data);\r\n\r\nconst productService = {\r\n  getAll,\r\n  get,\r\n  add,\r\n  update,\r\n  updateWithPhoto,\r\n  remove,\r\n};\r\n\r\nexport default productService;\r\n","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\api.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\bangtinh.jsx",["142"],"import React, { Component } from 'react';\r\nimport { Fragment } from 'react';\r\nclass BangTinh extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <ul className=\"nav nav-tabs bg-info\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" href=\"#\">phòng</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"car\">\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form-inline active-purple-4\">\r\n                                    <input className=\"form-control form-control-sm mr-3 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                    <i className=\"fas fa-search\" aria-hidden=\"true\" />\r\n                                </form>\r\n                                <div className=\"row mt-4\">\r\n                                    <table className=\"table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th scope=\"row\">1</th>\r\n                                                <td>Trà Gừng </td>\r\n                                                <td><i className=\"fas fa-plus\" />1<i className=\"fas fa-minus\" /></td>\r\n                                                <td>12000</td>\r\n                                                <td><b>12000</b></td>\r\n                                                <td><i className=\"fas fa-trash-alt\" />\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Cơm Thơm</td>\r\n                                                <td><i className=\"fas fa-plus\" />1<i className=\"fas fa-minus\" /></td>\r\n                                                <td>12000</td>\r\n                                                <td><b>12000</b></td>\r\n                                                <td> <i className=\"fas fa-trash-alt\" /> </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Lẩu Bò</td>\r\n                                                <td><i className=\"fas fa-plus\" />1<i className=\"fas fa-minus\" /></td>\r\n                                                <td>45000</td>\r\n                                                <td><b>45000</b></td>\r\n                                                <td> <i className=\"fas fa-trash-alt\" /></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {/**/}\r\n                                <hr className=\"border-primary\" />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6\" />\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-4\" id=\"rowone\">\r\n                                                <h5 style={{ color: 'crimson' }}>Tổng Tiền: </h5>\r\n                                            </div>\r\n                                            <div className=\"col-lg-4\">\r\n                                                <h5>122344</h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/**/}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-5\">\r\n                            {/* <div className=\"col-lg-6 md-6 col-sm-6\"> */}\r\n                            <div className=\"row offset-2\">\r\n                                <button type=\"button\" className=\"btn btn-primary mr-2 \">In</button>\r\n                                <button type=\"button\" className=\"btn btn-secondary mr-2\">Thanh Toán </button>\r\n                                <button type=\"button\" className=\"btn btn-success mr-2\">Thông Báo </button>\r\n                                <button type=\"button\" className=\"btn btn-danger\">Chuyển Ghép Bàn </button>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-lg-6 col-md-6 col-sm-6  \">\r\n                                <div className=\"row mt-3 mt-lg-0 mt-md-0 offset-1\">\r\n                                    <button type=\"button\" className=\"btn btn-success mr-5\">Thông Báo </button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\">Chuyển Ghép Bàn </button>\r\n                                </div>\r\n                            </div> */}\r\n                        {/* </div> */}\r\n                        {/**/}\r\n                        <footer className=\"mt-5\">\r\n                            <h6 className=\"text-center\">Hỗ trợ khách hàng: 0338269042</h6>\r\n                            <h6 className=\"text-center\">Chi nhánh quận 9</h6>\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BangTinh;","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\menu.jsx",["143","144","145","146","147","148"],"import React, { useEffect, useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport productListService from '../services/productListService';\r\nconst Menu = (props) => {\r\n    const [productList, setProductList] = useState([]);\r\n    const loadData = () => {\r\n        productListService.getAll().then(res => {\r\n            setProductList(res);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div className=\"row mt-4\">\r\n                    <ul className=\"nav nav-pills pl-3\">\r\n                        <li className=\"nav-item \">\r\n                            <a className=\"nav-link  btn border  mr-2 active  \" href=\"#\">Tất Cả</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border  mr-2\" href=\"#\">Hải Sản</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border  mr-2\" href=\"#\">Lẩu</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border w-30 mr-2\" href=\"#\">Món Xào</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border w-30 mr-2 \" href=\"#\">Món Chiên</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row mt-4\">\r\n                    {productList.map((product, idx) => {\r\n                        return (\r\n                            <div className=\"col-lg-3\" key={idx}>\r\n                                <img src={product.image} className=\"img-thumbnail h-75 w-75\" />\r\n                                <h5 className=\"text-center\">{product.name}</h5>\r\n                                <h5 className=\"text-center\">{product.price}</h5>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Menu;","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\tabs.jsx",["149","150","151"],"import React, { Component, Fragment } from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport BangTinh from './bangtinh';\r\nimport Menu from \"./menu\";\r\nimport RoomTables from './roomtables';\r\nimport Tab from './hoadon';\r\nclass Tabs extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-lg-6\">\r\n                                <div>\r\n                                    <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n                                        <li className=\"nav-item\" role=\"presentation\">\r\n                                            <a className=\"nav-link active\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"#pills-home\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">Phòng Bàn</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\" role=\"presentation\">\r\n                                            <a className=\"nav-link\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"#pills-profile\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Thực Đơn</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <form className=\"form-inline active-purple-4\">\r\n                                    <input className=\"form-control form-control-sm mr-3 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                    <i className=\"fas fa-search\" aria-hidden=\"true\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 pl-5\">\r\n                                <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\">\r\n\r\n                                        {<RoomTables />}\r\n\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\">\r\n                                        {<Menu />}\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\">...</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/*  */}\r\n                        {/* {<Menu />} */}\r\n                        {/*  */}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {/* <BangTinh /> */}\r\n                        {<Tab />}\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tabs;","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\hoadon.jsx",["152","153","154"],"// import { Tab } from 'bootstrap';\r\nimport React, { Component, useState } from 'react';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../config/store';\r\nimport HoaDonCT from './hoadonct';\r\n\r\nfunction ControlledTabs() {\r\n    const [key, setKey] = useState();\r\n    const [check, setCheck] = useState(false);\r\n    const tables = useSelector(state => state.tables.tableList);\r\n    return (\r\n        //\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                        <Tabs\r\n                            id=\"controlled-tab-example\"\r\n                            activeKey={key}\r\n                            onSelect={(k) => setKey(k)}\r\n                        >\r\n                            {tables.map(table => (\r\n                                <Tab eventKey={table.id} title={table.code}>\r\n                                    {/* <Sonnet /> */}\r\n                                    <HoaDonCT check={check} />\r\n                                </Tab>\r\n                            ))}\r\n                        </Tabs>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <form className=\"form-inline active-purple-4\">\r\n                            <input className=\"form-control form-control-sm mr-3 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <i className=\"fas fa-search\" aria-hidden=\"true\" />\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row mt-5\">\r\n                    {/* <div className=\"col-lg-6 md-6 col-sm-6\"> */}\r\n                    <div className=\"row offset-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary mr-2 \">In</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary mr-2\">Thanh Toán </button>\r\n                        <button type=\"button\" className=\"btn btn-success mr-2\">Thông Báo </button>\r\n                        <button type=\"button\" className=\"btn btn-danger\">Chuyển Ghép Bàn </button>\r\n                    </div>\r\n                </div>\r\n                <footer className=\"mt-5\">\r\n                    <h6 className=\"text-center\">Hỗ trợ khách hàng: 0338269042</h6>\r\n                    <h6 className=\"text-center\">Chi nhánh quận 9</h6>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n        //\r\n    );\r\n}\r\nexport default ControlledTabs;","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\roomtables.jsx",["155","156","157","158","159","160","161","162"],"import React, { Component, Link, useEffect, useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewTable } from '../action/action';\r\nimport bookingTableService from '../services/bookingTableService';\r\n\r\nconst RoomTables = (props) => {\r\n    const [tableList, setTableList] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickAddTable = (table) => {\r\n        const action = addNewTable(table);\r\n        dispatch(action);\r\n    }\r\n\r\n    const loadData = () => {\r\n        bookingTableService.getAll().then(res => {\r\n            setTableList(res);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div className=\"row mt-4\">\r\n                    <ul className=\"nav nav-pills\">\r\n                        <li className=\"nav-item \">\r\n                            <a className=\"nav-link active btn border \" href=\"#\">Tất Cả</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border\" href=\"#\">Tầng 1</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border\" href=\"#\">Tầng 2</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border\" href=\"#\">Tầng 3</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link btn border\" href=\"#\">Tầng 3(Khu Vực Vip)</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"row mt-4\">\r\n                    {tableList.map((table, idx) => {\r\n                        return (\r\n                            <div className=\"col-sm-6 col-md-4 col-lg-3 text-center\">\r\n                                {/* <i className=\"far fa-square fa-5x\"></i> */}\r\n                                <a\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => handleClickAddTable(table)}\r\n                                >\r\n                                    <i className=\"far fa-square fa-5x\"></i> {table.code}\r\n                                </a>\r\n                                {/* <h6 className=\"text-center\">{table.code}</h6> */}\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                </div>\r\n                {/*  */}\r\n\r\n                {/*  */}\r\n            </div>\r\n\r\n        </Fragment >\r\n    );\r\n\r\n}\r\n\r\nexport default RoomTables;","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\pages\\hoadonct.jsx",["163","164","165","166"],"import React, { Component, Fragment } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport a from '../assets/images.jpg';\r\n\r\nfunction HoaDonCT(props) {\r\n    const { check } = props;\r\n    return (\r\n        <Fragment>\r\n            {check ?\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col justify-content-center\">\r\n                        <img src={a} height={400} width={400} className=\"ml-5\" />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Trà Gừng </td>\r\n                                <td><i className=\"fas fa-plus\" />1<i className=\"fas fa-minus\" /></td>\r\n                                <td>12000</td>\r\n                                <td><b>12000</b></td>\r\n                                <td><i className=\"fas fa-trash-alt\" />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">2</th>\r\n                                <td>Cơm Thơm</td>\r\n                                <td><i className=\"fas fa-plus\" />1<i className=\"fas fa-minus\" /></td>\r\n                                <td>12000</td>\r\n                                <td><b>12000</b></td>\r\n                                <td> <i className=\"fas fa-trash-alt\" /> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Lẩu Bò</td>\r\n                                <td><i className=\"fas fa-plus\" />1<i className=\"fas fa-minus\" /></td>\r\n                                <td>45000</td>\r\n                                <td><b>45000</b></td>\r\n                                <td> <i className=\"fas fa-trash-alt\" /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default HoaDonCT;","D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\bookingTableService.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\action\\action.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\config\\store.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\reducer\\index.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\reducer\\tableReducer.js",[],"D:\\Project\\baitap\\Unicorn\\restaurant-management\\src\\services\\productListService.js",[],{"ruleId":"167","severity":1,"message":"168","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":9},{"ruleId":"167","severity":1,"message":"171","line":10,"column":8,"nodeType":"169","messageId":"170","endLine":10,"endColumn":14},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"167","severity":1,"message":"176","line":3,"column":18,"nodeType":"169","messageId":"170","endLine":3,"endColumn":29},{"ruleId":"167","severity":1,"message":"177","line":3,"column":31,"nodeType":"169","messageId":"170","endLine":3,"endColumn":41},{"ruleId":"167","severity":1,"message":"178","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":13},{"ruleId":"167","severity":1,"message":"179","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":21},{"ruleId":"167","severity":1,"message":"180","line":14,"column":23,"nodeType":"169","messageId":"170","endLine":14,"endColumn":37},{"ruleId":"167","severity":1,"message":"181","line":15,"column":10,"nodeType":"169","messageId":"170","endLine":15,"endColumn":20},{"ruleId":"167","severity":1,"message":"182","line":15,"column":22,"nodeType":"169","messageId":"170","endLine":15,"endColumn":35},{"ruleId":"167","severity":1,"message":"183","line":16,"column":10,"nodeType":"169","messageId":"170","endLine":16,"endColumn":23},{"ruleId":"167","severity":1,"message":"184","line":16,"column":25,"nodeType":"169","messageId":"170","endLine":16,"endColumn":41},{"ruleId":"167","severity":1,"message":"185","line":17,"column":10,"nodeType":"169","messageId":"170","endLine":17,"endColumn":17},{"ruleId":"167","severity":1,"message":"186","line":17,"column":19,"nodeType":"169","messageId":"170","endLine":17,"endColumn":29},{"ruleId":"167","severity":1,"message":"187","line":18,"column":10,"nodeType":"169","messageId":"170","endLine":18,"endColumn":16},{"ruleId":"167","severity":1,"message":"188","line":18,"column":18,"nodeType":"169","messageId":"170","endLine":18,"endColumn":27},{"ruleId":"167","severity":1,"message":"189","line":29,"column":10,"nodeType":"169","messageId":"170","endLine":29,"endColumn":16},{"ruleId":"167","severity":1,"message":"190","line":30,"column":9,"nodeType":"169","messageId":"170","endLine":30,"endColumn":26},{"ruleId":"167","severity":1,"message":"191","line":121,"column":10,"nodeType":"169","messageId":"170","endLine":121,"endColumn":22},{"ruleId":"167","severity":1,"message":"192","line":13,"column":24,"nodeType":"169","messageId":"170","endLine":13,"endColumn":39},{"ruleId":"167","severity":1,"message":"193","line":55,"column":10,"nodeType":"169","messageId":"170","endLine":55,"endColumn":12},{"ruleId":"167","severity":1,"message":"194","line":55,"column":14,"nodeType":"169","messageId":"170","endLine":55,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":110,"column":6,"nodeType":"197","endLine":110,"endColumn":8,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"199","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":12,"column":33,"nodeType":"202","endLine":12,"endColumn":73},{"ruleId":"200","severity":1,"message":"201","line":22,"column":29,"nodeType":"202","endLine":22,"endColumn":89},{"ruleId":"200","severity":1,"message":"201","line":25,"column":29,"nodeType":"202","endLine":25,"endColumn":79},{"ruleId":"200","severity":1,"message":"201","line":28,"column":29,"nodeType":"202","endLine":28,"endColumn":79},{"ruleId":"200","severity":1,"message":"201","line":31,"column":29,"nodeType":"202","endLine":31,"endColumn":83},{"ruleId":"200","severity":1,"message":"201","line":34,"column":29,"nodeType":"202","endLine":34,"endColumn":84},{"ruleId":"203","severity":1,"message":"204","line":42,"column":33,"nodeType":"202","endLine":42,"endColumn":96},{"ruleId":"167","severity":1,"message":"205","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":19},{"ruleId":"167","severity":1,"message":"206","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"207","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":16},{"ruleId":"167","severity":1,"message":"208","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":26},{"ruleId":"167","severity":1,"message":"209","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":13},{"ruleId":"167","severity":1,"message":"210","line":10,"column":19,"nodeType":"169","messageId":"170","endLine":10,"endColumn":27},{"ruleId":"167","severity":1,"message":"208","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"206","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":31,"column":29,"nodeType":"202","endLine":31,"endColumn":81},{"ruleId":"200","severity":1,"message":"201","line":34,"column":29,"nodeType":"202","endLine":34,"endColumn":73},{"ruleId":"200","severity":1,"message":"201","line":37,"column":29,"nodeType":"202","endLine":37,"endColumn":73},{"ruleId":"200","severity":1,"message":"201","line":40,"column":29,"nodeType":"202","endLine":40,"endColumn":73},{"ruleId":"200","severity":1,"message":"201","line":43,"column":29,"nodeType":"202","endLine":43,"endColumn":73},{"ruleId":"200","severity":1,"message":"211","line":53,"column":33,"nodeType":"202","endLine":56,"endColumn":34},{"ruleId":"167","severity":1,"message":"208","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"212","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"213","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":13,"column":25,"nodeType":"202","endLine":13,"endColumn":82},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'axios' is defined but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'setTotalPages' is assigned a value but never used.","'totalElements' is assigned a value but never used.","'setTotalElements' is assigned a value but never used.","'sortDir' is assigned a value but never used.","'setSortDir' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'detail' is assigned a value but never used.","'handleDetailClose' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setTypesPerPage' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'loadData'. Either include them or remove the dependency array.","ArrayExpression",["216"],"'Fragment' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Container' is defined but never used.","'Link' is defined but never used.","'BangTinh' is defined but never used.","'Component' is defined but never used.","'store' is defined but never used.","'setCheck' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Table' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},"Update the dependencies array to be: [currentPage, loadData]",{"range":"219","text":"220"},[3109,3111],"[currentPage, loadData]"]